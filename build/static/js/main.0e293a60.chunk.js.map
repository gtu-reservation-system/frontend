{"version":3,"sources":["components/HomeNavbar.js","components/ListNavbar.js","components/LoginNavbar.js","components/RestaurantNavbar.js","components/OwnerSignupNavbar.js","components/UserSignupNavbar.js","components/UserProfileNavbar.js","components/OwnerProfileNavbar.js","pages/Home.js","pages/List.js","components/ReservationForm.js","pages/Restaurant.js","components/LoginForm.js","pages/Login.js","pages/ForgotPassword.js","components/OwnerSignupForm.js","pages/OwnerSignup.js","components/UserSignupForm.js","pages/UserSignup.js","pages/UserProfile.js","utils/colorUtils.js","components/EditUserProfileForm.js","pages/EditUserProfile.js","pages/UserReservations.js","pages/OwnerProfile.js","components/ChangePasswordForm.js","pages/UserChangePassword.js","pages/OwnerChangePassword.js","components/EditOwnerProfileForm.js","pages/EditOwnerProfile.js","pages/OwnerReservations.js","components/ResetPasswordForm.js","pages/ResetPassword.js","pages/PopularDishes.js","pages/Favorites.js","App.js","index.js"],"names":["HomeNavbar","searchQuery","setSearchQuery","useState","showDropdown","setShowDropdown","isLoggedIn","setIsLoggedIn","role","setRole","isDarkMode","setIsDarkMode","isMobileMenuOpen","setIsMobileMenuOpen","navigate","useNavigate","useEffect","userId","sessionStorage","getItem","userRole","storedDarkMode","document","body","classList","add","toggleDarkMode","newDarkMode","toggle","setItem","handleSearch","trim","handleKeyPress","e","key","handleLogout","removeItem","NavigationItems","React","createElement","Fragment","className","type","placeholder","value","onChange","target","onKeyPress","onClick","disabled","aria-label","FontAwesomeIcon","icon","faSun","faMoon","faUser","src","alt","faTimes","faBars","ListNavbar","onMouseEnter","onMouseLeave","LoginNavbar","toggleDropdown","prev","toggleMobileMenu","RestaurantNavbar","OwnerSignupNavbar","UserSignupNavbar","UserProfileNavbar","handleHomeNavigation","X","Menu","handleLogoClick","Home","currentImageIndex","setCurrentImageIndex","carouselImages","prevImage","prevIndex","length","ChevronLeft","size","nextImage","ChevronRight","Phone","Mail","MapPin","Restaurants","restaurants","setRestaurants","loading","setLoading","error","setError","searchTerm","setSearchTerm","location","useLocation","async","url","URLSearchParams","search","get","response","axios","data","fetchRestaurants","filteredRestaurants","filter","restaurant","name","toLowerCase","includes","onSubmit","preventDefault","searchParams","set","delete","window","history","pushState","toString","dispatchEvent","Event","map","Link","to","id","logoPhotoPath","ReservationForm","_ref","availableTimeSlots","maxGuests","terms","reservationTags","date","setDate","time","setTime","guests","setGuests","hasAllergies","setHasAllergies","allergens","setAllergens","selectedTag","setSelectedTag","agreed","setAgreed","errorMessage","setErrorMessage","today","Date","toISOString","split","min","max","setMonth","getMonth","required","slot","Number","checked","tag","API_BASE_URL","process","Restaurant","_restaurant$tags","_currentComments$0$us","_currentComments$0$us2","_currentComments$0$us3","useParams","setAvailableTimeSlots","setRestaurant","comments","setComments","menuItems","setMenuItems","isFavorite","setIsFavorite","isUpdatingFavorite","setIsUpdatingFavorite","currentPage","setCurrentPage","console","fetchMenuItems","fetchedRestaurant","availableSlots","getAvailableTimeSlots","operatingHours","log","logo","logoPhoto","photos","err","message","fetchRestaurantData","fetchComments","favoriteRestaurantIds","favorite","fetchFavorites","slots","startTime","endTime","currentTime","parseInt","endHour","startHour","push","indexOfLastComment","indexOfFirstComment","currentComments","slice","totalPages","Math","ceil","getMenuItemColor","index","colors","favoritePayload","restaurantId","status","alert","post","address","tags","join","href","websiteLink","rel","photoPaths","photo","item","_item$tags","description","price","tagIndex","user","charAt","toUpperCase","createdAt","toLocaleDateString","year","month","day","Array","_","rating","comment","handlePreviousPage","prevPage","handleNextPage","state","from","reservationStartTime","reservationData","reservationEndTime","setHours","getHours","ReservationsResponse","Reservations","find","res","existingStartTime","existingEndTime","reservationPayload","numberOfPeople","allergy","additionalCondition","birthdayParty","anniversary","jobMeeting","proposal","Boolean","LoginForm","email","setEmail","password","setPassword","validateForm","test","htmlFor","LoginPage","style","fontSize","fontWeight","color","textAlign","marginBottom","fontFamily","padding","formData","ForgotPassword","setMessage","isEmailValid","availableTags","OwnerSignupForm","setName","phoneNumber","setPhoneNumber","setAddress","twoPersonTables","setTwoPersonTables","fourPersonTables","setFourPersonTables","sixPersonTables","setSixPersonTables","setOperatingHours","setPhotos","setLogo","setWebsiteLink","acceptConditions","setAcceptConditions","specialDays","setSpecialDays","setAdditionalCondition","setTags","handleSpecialDaysChange","hasUpperCase","hasLowerCase","hasNumber","isCorrectLength","isPasswordStrong","display","gap","alignItems","accept","multiple","selectedFiles","files","flexDirection","t","handleTagSelection","OwnerSignup","formDataToSend","FormData","restaurantData","tables","tableIndex","forEach","capacity","i","available","append","JSON","stringify","headers","setTimeout","UserSignupForm","fullName","setFullName","phone","isPhoneNumberValid","UserSignup","UserProfile","visibleComments","setVisibleComments","setUserId","dominantColor","setDominantColor","storedUserId","fetchUserComments","fetchUserData","img","Image","crossOrigin","imageLoadPromise","Promise","resolve","reject","onload","onerror","Error","imgEl","canvas","ctx","getContext","width","height","drawImage","r","g","b","getImageData","remove","documentElement","setProperty","deleteBtn","querySelector","isLightColor","analyzeBackgroundImage","removeProperty","handleReservationsRedirect","handleFavoritesRedirect","handlePasswordChangeRedirect","flex","backgroundColor","handleEditProfileRedirect","confirm","commentId","handleDeleteComment","handleShowMoreComments","EditUserProfileForm","formError","setFormError","EditUserProfile","handleBackToProfile","background","border","cursor","UserProfileForm","put","UserReservations","pastReservations","setPastReservations","pendingReservations","setPendingReservations","upcomingReservations","setUpcomingReservations","setComment","setRating","selectedReservationId","setSelectedReservationId","reservations","now","moment","past","pending","upcoming","reservation","reservationTime","isBefore","fetchUserIdAndReservations","handleAddComment","_pastReservations$fin","_pastReservations$fin2","newComment","prevReservations","renderReservations","format","reservationId","diff","handleCancel","rows","star","OwnerProfile","_ownerData$tables","_ownerData$tags","ownerData","setOwnerData","fetchOwnerData","tableCounts","reduce","counts","table","2","4","6","handleDishesRedirect","handlePasswordChange","handleEditProfile","_comment$user","ChangePasswordForm","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","isPasswordValid","UserChangePassword","handleProfileRedirect","storedPassword","OwnerChangePassword","ownerId","updatedData","EditOwnerProfileForm","handleSpecialDayChange","selectedDay","isHoursValid","isUrlValid","EditOwnerProfile","setOwnerId","storedOwnerId","newTables","prevData","file","URL","createObjectURL","formatDateTime","dateTime","toLocaleTimeString","hour","minute","OwnerReservations","setReservations","fetchReservations","handleReservationAction","action","patch","toLocaleString","ResetPasswordForm","token","setToken","ResetPassword","Modal","isOpen","onClose","children","PopularDishes","isModalOpen","setIsModalOpen","newDish","setNewDish","parseFloat","dishId","handleDelete","Favorites","favorites","setFavorites","successMessage","setSuccessMessage","restaurantName","handleRemoveFavorite","App","withDarkMode","NavbarComponent","props","Object","assign","WrappedNavbar","Navbar","WrappedNavbar2","Navbar2","WrappedNavbar3","Navbar3","WrappedNavbar4","Navbar4","WrappedNavbar5","Navbar5","WrappedNavbar6","Navbar6","WrappedNavbar7","Navbar7","WrappedNavbar8","Navbar8","Router","Routes","Route","path","element","Login","ReactDOM","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.0e293a60.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faBars, faTimes, faMoon, faSun } from '@fortawesome/free-solid-svg-icons';\n\nconst HomeNavbar = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [role, setRole] = useState('');\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const userId = sessionStorage.getItem('userId');\n    const userRole = sessionStorage.getItem('role');\n    const storedDarkMode = sessionStorage.getItem('darkMode');\n    \n    if (userId) {\n      setIsLoggedIn(true);\n      setRole(userRole);\n    }\n    if (storedDarkMode === 'true') {\n      setIsDarkMode(true);\n      document.body.classList.add('dark-mode');\n    }\n  }, []);\n\n  const toggleDarkMode = () => {\n    const newDarkMode = !isDarkMode;\n    setIsDarkMode(newDarkMode);\n    document.body.classList.toggle('dark-mode');\n    sessionStorage.setItem('darkMode', newDarkMode);\n  };\n\n  const handleSearch = () => {\n    if (searchQuery.trim()) {\n      navigate(`/restaurants?search=${searchQuery}`);\n      setIsMobileMenuOpen(false);\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      handleSearch();\n    }\n  };\n\n  const handleLogout = () => {\n    sessionStorage.removeItem('userId');\n    sessionStorage.removeItem('role');\n    setIsLoggedIn(false);\n    setRole('');\n    setIsMobileMenuOpen(false);\n    navigate('/');\n  };\n\n  const NavigationItems = () => (\n    <>\n      <div className=\"nav-search-container\">\n        <input\n          type=\"text\"\n          placeholder=\"Restoran ara\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n          onKeyPress={handleKeyPress}\n          className=\"home-search-input\"\n        />\n        <button \n          onClick={handleSearch} \n          disabled={!searchQuery.trim()} \n          className=\"home-search-button\"\n        >\n          Ara\n        </button>\n      </div>\n\n      <button\n        onClick={toggleDarkMode}\n        className=\"nav-button dark-mode-toggle\"\n        aria-label=\"Toggle dark mode\"\n      >\n        <FontAwesomeIcon icon={isDarkMode ? faSun : faMoon} />\n      </button>\n\n      {!isLoggedIn ? (\n        <div className=\"auth-buttons\">\n          <div className=\"signup-container\">\n            <button \n              className=\"signup-button\"\n              onClick={() => setShowDropdown(!showDropdown)}\n            >\n              Kayıt Ol\n            </button>\n            {showDropdown && (\n              <div className=\"dropdown\">\n                <button \n                  onClick={() => {\n                    navigate('/signup/owner');\n                    setIsMobileMenuOpen(false);\n                  }} \n                  className=\"dropdown-item\"\n                >\n                  Restoran\n                </button>\n                <button \n                  onClick={() => {\n                    navigate('/signup/user');\n                    setIsMobileMenuOpen(false);\n                  }} \n                  className=\"dropdown-item\"\n                >\n                  Kullanıcı\n                </button>\n              </div>\n            )}\n          </div>\n          <button \n            onClick={() => {\n              navigate('/login');\n              setIsMobileMenuOpen(false);\n            }} \n            className=\"nav-button\"\n          >\n            Giriş Yap\n          </button>\n        </div>\n      ) : (\n        <div className=\"auth-buttons\">\n          <button \n            onClick={() => {\n              navigate(role === 'user' ? '/userProfile' : '/ownerProfile');\n              setIsMobileMenuOpen(false);\n            }}\n            className=\"nav-button\"\n          >\n            <FontAwesomeIcon icon={faUser} />\n          </button>\n          <button onClick={handleLogout} className=\"nav-button\">\n            Çıkış Yap\n          </button>\n        </div>\n      )}\n    </>\n  );\n\n  return (\n    <div className=\"home-navbar\">\n      <div className=\"navbar-main\">\n        <div className=\"logo\" onClick={() => navigate('/')}>\n          <img\n            src={isDarkMode ? \"/dark-icon.png\" : \"/icon.png\"}\n            alt=\"Rezerve logo\"\n          />\n          Rezerve\n        </div>\n\n        {/* Mobile menu button */}\n        <button\n          className=\"mobile-menu-button\"\n          onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n          aria-label=\"Toggle menu\"\n        >\n          <FontAwesomeIcon icon={isMobileMenuOpen ? faTimes : faBars} />\n        </button>\n      </div>\n\n      {/* Desktop navigation */}\n      <nav className=\"navbar desktop-nav\">\n        <NavigationItems />\n      </nav>\n\n      {/* Mobile navigation */}\n      <nav className={`mobile-nav ${isMobileMenuOpen ? 'open' : ''}`}>\n        <NavigationItems />\n      </nav>\n    </div>\n  );\n};\n\nexport default HomeNavbar;","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faBars, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { useNavigate } from 'react-router-dom';\nimport './Navbar.css';\n\nconst ListNavbar = () => {\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [role, setRole] = useState('');\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const userId = sessionStorage.getItem('userId') || sessionStorage.getItem('ownerId');\n    const userRole = sessionStorage.getItem('role');\n    if (userId && userRole) {\n      setIsLoggedIn(true);\n      setRole(userRole);\n    }\n  }, []);\n\n  const handleLogout = () => {\n    sessionStorage.removeItem('userId');\n    sessionStorage.removeItem('ownerId');\n    sessionStorage.removeItem('role');\n    setIsLoggedIn(false);\n    setRole('');\n    setIsMobileMenuOpen(false);\n    navigate('/');\n  };\n\n  const NavigationItems = () => (\n    <>\n      <button onClick={() => navigate('/home')} className=\"nav-button\">\n        Ana Sayfa\n      </button>\n      {!isLoggedIn ? (\n        <div\n          onMouseEnter={() => setShowDropdown(true)}\n          onMouseLeave={() => setShowDropdown(false)}\n          className=\"signup-container\"\n        >\n          <button className=\"signup-button\">Kayıt Ol</button>\n          {showDropdown && (\n            <div className=\"dropdown\">\n              <button\n                onClick={() => {\n                  navigate('/signup/owner');\n                  setIsMobileMenuOpen(false);\n                }}\n                className=\"dropdown-item\"\n              >\n                Restoran\n              </button>\n              <button\n                onClick={() => {\n                  navigate('/signup/user');\n                  setIsMobileMenuOpen(false);\n                }}\n                className=\"dropdown-item\"\n              >\n                Kullanıcı\n              </button>\n            </div>\n          )}\n        </div>\n      ) : (\n        <button\n          onClick={() => {\n            navigate(role === 'user' ? '/userProfile' : '/ownerProfile');\n            setIsMobileMenuOpen(false);\n          }}\n          className=\"nav-button\"\n        >\n          <FontAwesomeIcon icon={faUser} />\n        </button>\n      )}\n      {!isLoggedIn ? (\n        <button\n          onClick={() => {\n            navigate('/login');\n            setIsMobileMenuOpen(false);\n          }}\n          className=\"nav-button\"\n        >\n          Giriş Yap\n        </button>\n      ) : (\n        <button onClick={handleLogout} className=\"nav-button\">\n          Çıkış Yap\n        </button>\n      )}\n    </>\n  );\n\n  return (\n    <div className=\"home-navbar\">\n      <div className=\"navbar-main\">\n        <div className=\"logo\" onClick={() => navigate('/')}>\n          <img src=\"/icon.png\" alt=\"Rezerve logo\" />\n          Rezerve\n        </div>\n\n        {/* Mobile menu toggle */}\n        <button\n          className=\"mobile-menu-button\"\n          onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n          aria-label=\"Toggle menu\"\n        >\n          <FontAwesomeIcon icon={isMobileMenuOpen ? faTimes : faBars} />\n        </button>\n      </div>\n\n      {/* Desktop navigation */}\n      <nav className=\"navbar desktop-nav\">\n        <NavigationItems />\n      </nav>\n\n      {/* Mobile navigation */}\n      <nav className={`mobile-nav ${isMobileMenuOpen ? 'open' : ''}`}>\n        <NavigationItems />\n      </nav>\n    </div>\n  );\n};\n\nexport default ListNavbar;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Navbar.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nconst LoginNavbar = () => {\n  const navigate = useNavigate();\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  const toggleMobileMenu = () => {\n    setIsMobileMenuOpen(!isMobileMenuOpen);\n  };\n\n  const toggleDropdown = () => {\n    setShowDropdown((prev) => !prev);\n  };\n\n  const NavigationItems = () => (\n    <>\n      <button className=\"nav-button\" onClick={() => navigate('/home')}>\n        Ana Sayfa\n      </button>\n\n      <div className=\"signup-container\">\n        <button className=\"signup-button\" onClick={toggleDropdown}>\n          Kayıt Ol\n        </button>\n        {showDropdown && (\n          <div className=\"dropdown\">\n            <button\n              className=\"dropdown-item\"\n              onClick={() => {\n                navigate('/signup/owner');\n                setIsMobileMenuOpen(false);\n                setShowDropdown(false);\n              }}\n            >\n              Restoran\n            </button>\n            <button\n              className=\"dropdown-item\"\n              onClick={() => {\n                navigate('/signup/user');\n                setIsMobileMenuOpen(false);\n                setShowDropdown(false);\n              }}\n            >\n              Kullanıcı\n            </button>\n          </div>\n        )}\n      </div>\n    </>\n  );\n\n  return (\n    <div className=\"home-navbar\">\n      <div className=\"navbar-main\">\n        <div className=\"logo\" onClick={() => navigate('/')}> \n          <img src=\"/icon.png\" alt=\"Logo\" />\n          Rezerve\n        </div>\n\n        <button\n          className=\"mobile-menu-button\"\n          onClick={toggleMobileMenu}\n          aria-label=\"Toggle menu\"\n        >\n          <FontAwesomeIcon icon={isMobileMenuOpen ? faTimes : faBars} />\n        </button>\n      </div>\n\n      {/* Desktop Navigation */}\n      <nav className=\"navbar desktop-nav\">\n        <NavigationItems />\n      </nav>\n\n      {/* Mobile Navigation */}\n      <nav className={`mobile-nav ${isMobileMenuOpen ? 'open' : ''}`}>\n        <NavigationItems />\n      </nav>\n    </div>\n  );\n};\n\nexport default LoginNavbar;\n","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faBars, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { useNavigate } from 'react-router-dom';\nimport './Navbar.css';\n\nconst RestaurantNavbar = () => {\n  const navigate = useNavigate();\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [role, setRole] = useState('');\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  useEffect(() => {\n    const userId = sessionStorage.getItem('userId') || sessionStorage.getItem('ownerId');\n    const userRole = sessionStorage.getItem('role');\n\n    if (userId && userRole) {\n      setIsLoggedIn(true);\n      setRole(userRole);\n    }\n  }, []);\n\n  const handleLogout = () => {\n    sessionStorage.removeItem('userId');\n    sessionStorage.removeItem('ownerId');\n    sessionStorage.removeItem('role');\n    setIsLoggedIn(false);\n    setRole('');\n    setIsMobileMenuOpen(false);\n    navigate('/');\n  };\n\n  const NavigationItems = () => (\n    <>\n      <button onClick={() => navigate('/home')} className=\"nav-button\">\n        Ana Sayfa\n      </button>\n      <button onClick={() => navigate('/restaurants')} className=\"nav-button\">\n        Restoranlar\n      </button>\n      {!isLoggedIn ? (\n        <div className=\"auth-buttons\">\n          <div\n            className=\"signup-container\"\n            onMouseEnter={() => setShowDropdown(true)}\n            onMouseLeave={() => setShowDropdown(false)}\n          >\n            <button className=\"nav-button\">Kayıt Ol</button>\n            {showDropdown && (\n              <div className=\"dropdown\">\n                <button\n                  onClick={() => {\n                    navigate('/signup/owner');\n                    setIsMobileMenuOpen(false);\n                  }}\n                  className=\"dropdown-button\"\n                >\n                  Restoran\n                </button>\n                <button\n                  onClick={() => {\n                    navigate('/signup/user');\n                    setIsMobileMenuOpen(false);\n                  }}\n                  className=\"dropdown-button\"\n                >\n                  Kullanıcı\n                </button>\n              </div>\n            )}\n          </div>\n          <button\n            onClick={() => {\n              navigate('/login');\n              setIsMobileMenuOpen(false);\n            }}\n            className=\"nav-button\"\n          >\n            Giriş Yap\n          </button>\n        </div>\n      ) : (\n        <div className=\"auth-buttons\">\n          <button\n            onClick={() => {\n              navigate(role === 'user' ? '/userProfile' : '/ownerProfile');\n              setIsMobileMenuOpen(false);\n            }}\n            className=\"nav-button\"\n          >\n            <FontAwesomeIcon icon={faUser} /> Profil\n          </button>\n          <button onClick={handleLogout} className=\"nav-button\">\n            Çıkış Yap\n          </button>\n        </div>\n      )}\n    </>\n  );\n\n  return (\n    <div className=\"home-navbar\">\n      <div className=\"navbar-main\">\n        <div className=\"logo\" onClick={() => navigate('/')}>\n          <img src=\"/icon.png\" alt=\"Rezerve logo\" />\n          Rezerve\n        </div>\n\n        {/* Mobile menu button */}\n        <button\n          className=\"mobile-menu-button\"\n          onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n          aria-label=\"Toggle menu\"\n        >\n          <FontAwesomeIcon icon={isMobileMenuOpen ? faTimes : faBars} />\n        </button>\n      </div>\n\n      {/* Desktop navigation */}\n      <nav className=\"navbar desktop-nav\">\n        <NavigationItems />\n      </nav>\n\n      {/* Mobile navigation */}\n      <nav className={`mobile-nav ${isMobileMenuOpen ? 'open' : ''}`}>\n        <NavigationItems />\n      </nav>\n    </div>\n  );\n};\n\nexport default RestaurantNavbar;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Navbar.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nconst OwnerSignupNavbar = () => {\n  const navigate = useNavigate();\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  const toggleMobileMenu = () => {\n    setIsMobileMenuOpen((prev) => !prev);\n  };\n\n  const NavigationItems = () => (\n    <>\n      <button className=\"nav-button\" onClick={() => navigate('/home')}>\n        Ana Sayfa\n      </button>\n      <div className=\"auth-buttons\">\n        <button\n          className=\"nav-button\"\n          onClick={() => navigate('/signup/user')}\n        >\n          Kullanıcı Kaydı\n        </button>\n        <button className=\"nav-button\" onClick={() => navigate('/login')}>\n          Giriş Yap\n        </button>\n      </div>\n    </>\n  );\n\n  return (\n    <div className=\"home-navbar\">\n      <div className=\"navbar-main\">\n        <div className=\"logo\" onClick={() => navigate('/')}>\n          <img src=\"/icon.png\" alt=\"Logo\" /> Rezerve\n        </div>\n\n        <button\n          className=\"mobile-menu-button\"\n          onClick={toggleMobileMenu}\n          aria-label=\"Toggle menu\"\n        >\n          <FontAwesomeIcon icon={isMobileMenuOpen ? faTimes : faBars} />\n        </button>\n      </div>\n\n      {/* Desktop Navigation */}\n      <nav className=\"navbar desktop-nav\">\n        <NavigationItems />\n      </nav>\n\n      {/* Mobile Navigation */}\n      <nav className={`mobile-nav ${isMobileMenuOpen ? 'open' : ''}`}>\n        <NavigationItems />\n      </nav>\n    </div>\n  );\n};\n\nexport default OwnerSignupNavbar;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './UserSignupNavbar.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nconst UserSignupNavbar = () => {\n  const navigate = useNavigate();\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  const toggleMobileMenu = () => {\n    setIsMobileMenuOpen((prev) => !prev);\n  };\n\n  const NavigationItems = () => (\n    <>\n      <button className=\"nav-button\" onClick={() => navigate('/home')}>\n        Ana Sayfa\n      </button>\n      <div className=\"auth-buttons\">\n        <div className=\"signup-container\">\n          <button\n            className=\"nav-button\"\n            onClick={() => navigate('/signup/owner')}\n          >\n            Restoran Kaydı\n          </button>\n          <button className=\"nav-button\" onClick={() => navigate('/login')}>\n            Giriş Yap\n          </button>\n        </div>\n      </div>\n    </>\n  );\n\n  return (\n    <div className=\"home-navbar\">\n      <div className=\"navbar-main\">\n        <div className=\"logo\" onClick={() => navigate('/')}>\n          <img src=\"/icon.png\" alt=\"Logo\" /> Rezerve\n        </div>\n\n        <button\n          className=\"mobile-menu-button\"\n          onClick={toggleMobileMenu}\n          aria-label=\"Toggle menu\"\n        >\n          <FontAwesomeIcon icon={isMobileMenuOpen ? faTimes : faBars} />\n        </button>\n      </div>\n\n      {/* Desktop Navigation */}\n      <nav className=\"navbar desktop-nav\">\n        <NavigationItems />\n      </nav>\n\n      {/* Mobile Navigation */}\n      <nav className={`mobile-nav ${isMobileMenuOpen ? 'open' : ''}`}>\n        <NavigationItems />\n      </nav>\n    </div>\n  );\n};\n\nexport default UserSignupNavbar;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Menu, X } from 'lucide-react';\n\nconst UserProfileNavbar = () => {\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const navigate = useNavigate();\n\n  const handleHomeNavigation = () => {\n    setIsMobileMenuOpen(false);\n    navigate('/home');\n  };\n\n  const handleLogout = () => {\n    sessionStorage.removeItem('userId');\n    sessionStorage.removeItem('role');\n    setIsMobileMenuOpen(false);\n    navigate('/home');\n  };\n\n  const NavigationItems = () => (\n    <div className=\"auth-buttons\">\n      <button onClick={handleHomeNavigation} className=\"nav-button\">\n        Ana Sayfa\n      </button>\n      <button onClick={handleLogout} className=\"nav-button\">\n        Çıkış Yap\n      </button>\n    </div>\n  );\n\n  return (\n    <div className=\"home-navbar\">\n      <div className=\"navbar-main\">\n        <div className=\"logo\" onClick={handleHomeNavigation}>\n          <img src=\"/icon.png\" alt=\"Rezerve logo\" />\n          <span>Rezerve</span>\n        </div>\n\n        {/* Mobile menu button */}\n        <button\n          className=\"mobile-menu-button\"\n          onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n        >\n          {isMobileMenuOpen ? (\n            <X className=\"h-6 w-6\" />\n          ) : (\n            <Menu className=\"h-6 w-6\" />\n          )}\n        </button>\n      </div>\n\n      {/* Desktop navigation */}\n      <nav className=\"navbar desktop-nav\">\n        <NavigationItems />\n      </nav>\n\n      {/* Mobile navigation */}\n      <nav className={`mobile-nav ${isMobileMenuOpen ? 'open' : ''}`}>\n        <NavigationItems />\n      </nav>\n    </div>\n  );\n};\n\nexport default UserProfileNavbar;","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Menu, X } from 'lucide-react';\n\nconst UserProfileNavbar = () => {\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const navigate = useNavigate();\n\n  const handleLogoClick = () => {\n    setIsMobileMenuOpen(false);\n    navigate('/ownerprofile');\n  };\n\n  const handleLogout = () => {\n    sessionStorage.removeItem('userId');\n    sessionStorage.removeItem('role');\n    setIsMobileMenuOpen(false);\n    navigate('/home');\n  };\n\n  const NavigationItems = () => (\n    <div className=\"auth-buttons\">\n      <button onClick={handleLogout} className=\"nav-button\">\n        Çıkış Yap\n      </button>\n    </div>\n  );\n\n  return (\n    <div className=\"home-navbar\">\n      <div className=\"navbar-main\">\n        <div className=\"logo\" onClick={handleLogoClick}>\n          <img src=\"/icon.png\" alt=\"Logo\" />\n          <span>Rezerve</span>\n        </div>\n\n        {/* Mobile menu button */}\n        <button\n          className=\"mobile-menu-button\"\n          onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n        >\n          {isMobileMenuOpen ? (\n            <X className=\"h-6 w-6\" />\n          ) : (\n            <Menu className=\"h-6 w-6\" />\n          )}\n        </button>\n      </div>\n\n      {/* Desktop navigation */}\n      <nav className=\"navbar desktop-nav\">\n        <NavigationItems />\n      </nav>\n\n      {/* Mobile navigation */}\n      <nav className={`mobile-nav ${isMobileMenuOpen ? 'open' : ''}`}>\n        <NavigationItems />\n      </nav>\n    </div>\n  );\n};\n\nexport default UserProfileNavbar;","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ChevronLeft, ChevronRight, Phone, Mail, MapPin } from 'lucide-react';\nimport './Home.css';\n\nconst Home = () => {\n  const navigate = useNavigate();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  \n  const carouselImages = [\n    '/image1.jpg',\n    '/image2.jpg',\n    '/image3.jpg',\n    '/image4.jpg'\n  ];\n\n  useEffect(() => {\n    const storedDarkMode = sessionStorage.getItem('darkMode');\n    if (storedDarkMode === 'true') {\n      setIsDarkMode(true);\n      document.body.classList.add('dark-mode');\n    }\n  }, []);\n\n  const nextImage = () => {\n    setCurrentImageIndex((prevIndex) =>\n      (prevIndex + 1) % carouselImages.length\n    );\n  };\n\n  const prevImage = () => {\n    setCurrentImageIndex((prevIndex) =>\n      prevIndex === 0 ? carouselImages.length - 1 : prevIndex - 1\n    );\n  };\n\n  return (\n    <div className={`home-container ${isDarkMode ? 'dark-mode' : ''}`}>\n      <header className=\"hero\">\n        <div className=\"hero-content\">\n          <h1>Her Durum İçin Bir Masa Ayırtın</h1>\n          <p>İlk buluşmalardan, doğum günlerine, yıldönümlerinden, iş yemeklerine kadar hayat lezzetlidir. Neden en iyi puan almış restoranlarda rezervasyon yaparak kutlamıyorsunuz?</p>\n          <div className=\"hero-actions\">\n            <button onClick={() => navigate('/Restaurants')}>Restoranları Keşfedin</button>\n          </div>\n        </div>\n      </header>\n\n      <div className=\"red-panel-up\"> </div>\n\n      <section className=\"why-opentable\">\n        <h2>Neden Rezerve'den Rezervasyon Yapmalısınız?</h2>\n        <p>Rezerve ağı restoranları ve müşterileri buluşturur, doğru masayı bulup rezervasyon yapmanıza yardımcı olur ve restoranların kişiye özel hizmet sunarak müşterilerini memnun etmelerine destek olur.</p>\n      </section>\n\n      <div className=\"white-panel\">\n        <div className=\"carousel-container\">\n          <button\n            className=\"carousel-button prev\"\n            onClick={prevImage}\n          >\n            <ChevronLeft size={32} />\n          </button>\n          <div className=\"carousel-image-wrapper\">\n            <img\n              src={carouselImages[currentImageIndex]}\n              alt={`Restoran resmi ${currentImageIndex + 1}`}\n              className=\"carousel-image\"\n            />\n          </div>\n          <button\n            className=\"carousel-button next\"\n            onClick={nextImage}\n          >\n            <ChevronRight size={32} />\n          </button>\n        </div>\n      </div>\n\n      <div className=\"red-panel\">\n        <div className=\"contact-container\">\n          <h2 className=\"contact-title\">Bize Ulaşın</h2>\n          <div className=\"contact-info\">\n            <div className=\"contact-item\">\n              <Phone className=\"contact-icon\" />\n              <div>\n                <h3>Telefon</h3>\n                <p>+90 (212) 555 0123</p>\n              </div>\n            </div>\n            <div className=\"contact-item\">\n              <Mail className=\"contact-icon\" />\n              <div>\n                <h3>E-posta</h3>\n                <p>iletisim@rezerve.com</p>\n              </div>\n            </div>\n            <div className=\"contact-item\">\n              <MapPin className=\"contact-icon\" />\n              <div>\n                <h3>Adres</h3>\n                <p>Levent Mah. Büyükdere Cad. No:123<br />Şişli, İstanbul</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;","import React, { useState, useEffect } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './List.css';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nconst Restaurants = () => {\n  const [restaurants, setRestaurants] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchRestaurants = async () => {\n      try {\n        let url = `${API_BASE_URL}/api/restaurants`;\n        const searchQuery = new URLSearchParams(location.search).get('search');\n        \n        if (searchQuery) {\n          url += `?search=${searchQuery}`;\n          setSearchTerm(searchQuery);\n        }\n        \n        const response = await axios.get(url);\n        setRestaurants(response.data);\n      } catch (error) {\n        setError('Restaurants could not be loaded.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchRestaurants();\n  }, [location.search]);\n\n  const handleSearchChange = (e) => {\n    setSearchTerm(e.target.value);\n  };\n\n  const handleSearchSubmit = (e) => {\n    e.preventDefault();\n    const searchParams = new URLSearchParams(location.search);\n    \n    if (searchTerm) {\n      searchParams.set('search', searchTerm);\n    } else {\n      searchParams.delete('search');\n    }\n    \n    window.history.pushState({}, '', `?${searchParams.toString()}`);\n    window.dispatchEvent(new Event('popstate'));\n  };\n\n  const filteredRestaurants = restaurants.filter((restaurant) =>\n    restaurant.name.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  if (loading) return <div className=\"loading-message\">Loading...</div>;\n  if (error) return <div className=\"error-message\">{error}</div>;\n\n  return (\n    <div className=\"main-container\">\n      {/* Hero Section */}\n      <div className=\"hero-section\">\n        {/* Static Image Background */}\n        <div className=\"hero-background\">\n          <img \n            src=\"/foods.jpg\" \n            alt=\"Restaurant background\" \n            className=\"hero-image\"\n          />\n          {/* Overlay for better text visibility */}\n          <div className=\"hero-overlay\"></div>\n        </div>\n\n        {/* Search Container */}\n        <div className=\"search-container\">\n          <form onSubmit={handleSearchSubmit} className=\"search-form\">\n            <input\n              type=\"text\"\n              value={searchTerm}\n              onChange={handleSearchChange}\n              placeholder=\"Restoran ara\"\n              className=\"search-input\"\n            />\n            <button type=\"submit\" className=\"search-button\">\n              Ara\n            </button>\n          </form>\n        </div>\n      </div>\n\n      {/* Restaurants Grid Section */}\n      <div className=\"content-section\">\n        <div className=\"restaurants-grid\">\n          {filteredRestaurants.length > 0 ? (\n            filteredRestaurants.map((restaurant) => (\n              <Link\n                to={`/restaurants/${restaurant.id}`}\n                key={restaurant.id}\n                className=\"restaurant-card\"\n              >\n                <div className=\"restaurant-image-wrapper\">\n                  <img\n                    src={restaurant.logoPhotoPath}\n                    alt={restaurant.name}\n                    className=\"restaurant-image\"\n                  />\n                </div>\n                <div className=\"restaurant-name\">{restaurant.name}</div>\n              </Link>\n            ))\n          ) : (\n            <div className=\"no-results\">Restoran bulunamadı.</div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Restaurants;\n","import React, { useState } from 'react';\nimport './EditUserProfileForm.css'\n\nconst ReservationForm = ({ onSubmit, availableTimeSlots, maxGuests, terms, reservationTags }) => {\n  const [date, setDate] = useState('');\n  const [time, setTime] = useState('');\n  const [guests, setGuests] = useState(1);\n  const [hasAllergies, setHasAllergies] = useState(false);\n  const [allergens, setAllergens] = useState('');\n  const [selectedTag, setSelectedTag] = useState('');\n  const [agreed, setAgreed] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const today = new Date().toISOString().split(\"T\")[0];\n\n    if (!date || !time || !guests) {\n      setErrorMessage(\"Lütfen tüm alanları doldurun.\");\n      return;\n    }\n\n    if (date === today) {\n      setErrorMessage(\"Aynı gün içinde rezervasyon yapılamaz. Lütfen başka bir tarih seçin.\");\n      return;\n    }\n\n    if (guests > maxGuests) {\n      setErrorMessage(`${maxGuests} kişiden fazla için lütfen restoranla iletişime geçin.`);\n      return;\n    }\n\n    if (hasAllergies && !allergens) {\n      setErrorMessage(\"Lütfen alerji bilginizi girin.\");\n      return;\n    }\n\n    if (terms && !agreed) {\n      setErrorMessage(\"Lütfen şartları kabul edin.\");\n      return;\n    }\n\n    if (!availableTimeSlots.includes(time)) {\n      setErrorMessage(\"Bu saat diliminde uygun masa bulunmamaktadır. Lütfen başka bir saat seçin.\");\n      return;\n    }\n\n    setErrorMessage('');\n    onSubmit({\n      date,\n      time,\n      guests,\n      hasAllergies,\n      allergens,\n      selectedTag,\n    });\n\n    // Reset form\n    setDate('');\n    setTime('');\n    setGuests(1);\n    setHasAllergies(false);\n    setAllergens('');\n    setSelectedTag('');\n    setAgreed(false);\n  };\n\n  return (\n    <div className=\"w-full max-w-2xl mx-auto p-6 bg-white rounded-lg shadow-md\">\n      <form onSubmit={handleSubmit} className=\"space-y-6\">\n        \n        {errorMessage && (\n          <div className=\"p-3 bg-red-50 border border-red-200 rounded-md\">\n            <p className=\"text-red-600 text-sm\">{errorMessage}</p>\n          </div>\n        )}\n\n        <div className=\"space-y-4\">\n          {/* Date and Time Section */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"input-group\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Tarih\n              </label>\n              <input \n                type=\"date\" \n                value={date} \n                onChange={(e) => setDate(e.target.value)} \n                min={new Date().toISOString().split(\"T\")[0]} \n                max={new Date(new Date().setMonth(new Date().getMonth() + 1)).toISOString().split(\"T\")[0]} \n                required \n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </div>\n\n            <div className=\"input-group\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Saat\n              </label>\n              <select \n                value={time} \n                onChange={(e) => setTime(e.target.value)} \n                required\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              >\n                <option value=\"\" disabled>Saat seçin</option>\n                {availableTimeSlots.map((slot) => (\n                  <option key={slot} value={slot}>{slot}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n\n          {/* Guests Section */}\n          <div className=\"input-group\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Kişi Sayısı\n            </label>\n            <input\n              type=\"number\"\n              value={guests}\n              onChange={(e) => setGuests(Number(e.target.value))}\n              min=\"1\"\n              max={maxGuests}\n              required\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n            {guests > maxGuests && (\n              <p className=\"mt-1 text-sm text-red-600\">\n                {maxGuests} kişiden fazla için lütfen restoranla iletişime geçin.\n              </p>\n            )}\n          </div>\n\n          {/* Allergies Section */}\n          <div className=\"space-y-3\">\n            <label className=\"block text-sm font-medium text-gray-700\">\n              Herhangi bir alerjiniz var mı?\n            </label>\n            <div className=\"flex space-x-4\">\n              <label className=\"flex items-center\">\n                <input \n                  type=\"radio\" \n                  name=\"hasAllergies\" \n                  checked={hasAllergies} \n                  onChange={() => setHasAllergies(true)}\n                  className=\"mr-2\"\n                />\n                <span className=\"text-sm text-gray-700\">Evet</span>\n              </label>\n              <label className=\"flex items-center\">\n                <input \n                  type=\"radio\" \n                  name=\"hasAllergies\" \n                  checked={!hasAllergies} \n                  onChange={() => setHasAllergies(false)}\n                  className=\"mr-2\"\n                />\n                <span className=\"text-sm text-gray-700\">Hayır</span>\n              </label>\n            </div>\n          </div>\n\n          {hasAllergies && (\n            <div className=\"input-group\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Alerji Bilginizi Girin\n              </label>\n              <textarea \n                value={allergens} \n                onChange={(e) => setAllergens(e.target.value)} \n                placeholder=\"Neye alerjiniz olduğunu belirtin\"\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 min-h-[100px]\"\n              />\n            </div>\n          )}\n\n          {/* Reservation Tags Section */}\n          {reservationTags && reservationTags.length > 0 && (\n            <div className=\"space-y-3\">\n              <label className=\"block text-sm font-medium text-gray-700\">\n                Rezervasyon Etiketi\n              </label>\n              <div className=\"flex flex-wrap gap-4\">\n                <label className=\"flex items-center\">\n                  <input \n                    type=\"radio\" \n                    name=\"reservationTag\" \n                    value=\"\" \n                    checked={selectedTag === ''} \n                    onChange={() => setSelectedTag('')}\n                    className=\"mr-2\"\n                  />\n                  <span className=\"text-sm text-gray-700\">Hiçbiri</span>\n                </label>\n                {reservationTags.map(tag => (\n                  <label key={tag} className=\"flex items-center\">\n                    <input \n                      type=\"radio\" \n                      name=\"reservationTag\" \n                      value={tag} \n                      checked={selectedTag === tag} \n                      onChange={() => setSelectedTag(tag)}\n                      className=\"mr-2\"\n                    />\n                    <span className=\"text-sm text-gray-700\">{tag}</span>\n                  </label>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* Terms Section */}\n          {terms && (\n            <div className=\"flex items-start space-x-2\">\n              <input \n                type=\"checkbox\" \n                checked={agreed} \n                onChange={() => setAgreed(!agreed)}\n                className=\"mt-1\"\n              />\n              <span className=\"text-sm text-gray-700\">{terms}</span>\n            </div>\n          )}\n        </div>\n\n        <button \n          type=\"submit\"\n          className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors\"\n        >\n          Rezervasyon Talebimi Gönder\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ReservationForm;","import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport ReservationForm from '../components/ReservationForm.js';\nimport './Restaurant.css';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nconst Restaurant = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [availableTimeSlots, setAvailableTimeSlots] = useState([]);\n  const [restaurant, setRestaurant] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [comments, setComments] = useState([]);\n  const [menuItems, setMenuItems] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [isUpdatingFavorite, setIsUpdatingFavorite] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const commentsPerPage = 1;\n\n  const userId = sessionStorage.getItem('userId');\n\n  const handleReservation = async (reservationData) => {\n    try {\n      if (!userId) {\n        navigate('/login', { state: { from: `/restaurant/${id}` } });\n        return;\n      }\n  \n      const restaurantId = Number(id);\n\t  const reservationStartTime = `${reservationData.date}T${reservationData.time}:00`;\n\t  const reservationEndTime = new Date(reservationStartTime);\n      reservationEndTime.setHours(reservationEndTime.getHours() + 1);\n  \n      const ReservationsResponse = await axios.get(\n        `${API_BASE_URL}/api/reservations/user/${userId}?date=${reservationData.date}`\n      );\n      const Reservations = ReservationsResponse.data;\n      console.log(ReservationsResponse.data);\n\t  //console.log(ReservationData.date);\n\t  console.log(\"ikincisi reservationData.date\");//as\n\t\tconst sameRestaurantReservation = Reservations.find((res) => {\n\t\t\tconst existingStartTime = new Date(res.reservationStartTime);\n\t\t\tconst existingEndTime = new Date(res.reservationEndTime);\n\t\t\t// Check if the reservation times overlap\n\t\t\treturn (\n\t\t\t\tres.restaurant.id === restaurantId &&\n\t\t\t\t\texistingStartTime < reservationEndTime &&\n\t\t\t\t\texistingEndTime > reservationStartTime\n\t\t\t);\n\t\t});\n      if (sameRestaurantReservation) {\n        alert('Aynı restoranda aynı gün için zaten bir rezervasyonunuz var.');\n        return;\n      }\n\t\t\n      const otherRestaurantReservation = Reservations.find((res) => {\n        const existingStartTime = new Date(res.reservationStartTime);\n        const existingEndTime = new Date(res.reservationEndTime);\n        // Check if the reservation times overlap\n        return (\n          res.restaurant.id !== restaurantId &&\n          existingStartTime < reservationEndTime &&\n          existingEndTime > reservationStartTime\n        );\n      });\n      if (otherRestaurantReservation) {\n        alert('Başka bir restoranda aynı gün için zaten bir rezervasyonunuz var.');\n        return;\n      }\n\n      const reservationPayload = {\n        restaurantId,\n        userId: Number(userId),\n        numberOfPeople: Number(reservationData.guests),\n        reservationStartTime,\n        allergy: reservationData.hasAllergies ? reservationData.allergens : null,\n        tag: reservationData.selectedTag || null,\n      };\n \n      const response = await axios.post(`${API_BASE_URL}/api/reservations`, reservationPayload);\n      if (response.status === 201) {\n        alert('Rezervasyonunuz başarıyla oluşturuldu!');\n      }\n    } catch (error) {\n      console.error('Rezervasyon oluşturulurken hata:', error.response ? error.response.data : error.message);\n      alert('Bir hata oluştu. Lütfen tekrar deneyin.');\n    }\n  };\n  \n\n  const toggleFavorite = async () => {\n    try {\n      setIsUpdatingFavorite(true);\n\n      const favoritePayload = {\n        userId: Number(userId),\n        restaurantId: Number(id),\n      };\n\n      if (isFavorite) {\n        const response = await axios.delete(`${API_BASE_URL}/api/favorites/${userId}/${id}`);\n        if (response.status === 200) {\n          setIsFavorite(false);\n          alert('Favorilerden kaldırıldı!');\n        }\n      } else {\n        const response = await axios.post(`${API_BASE_URL}/api/favorites`, favoritePayload);\n        if (response.status === 201) {\n          setIsFavorite(true);\n          alert('Favorilere eklendi!');\n        }\n      }\n    } catch (error) {\n      console.error('Favori durumu güncellenirken hata:', error.response ? error.response.data : error.message);\n      alert('Bir hata oluştu. Lütfen tekrar deneyin.');\n    } finally {\n      setIsUpdatingFavorite(false);\n    }\n  };\n\n  useEffect(() => {\n    const fetchRestaurantData = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(`${API_BASE_URL}/api/restaurants/${id}`);\n        const fetchedRestaurant = response.data;\n\n        const availableSlots = getAvailableTimeSlots(fetchedRestaurant.operatingHours);\n\n          setRestaurant(fetchedRestaurant);\n\t\t  console.log(\"fetched the restaurant\\n\");\n\t\t  console.log(fetchedRestaurant.logo);\n\t\t  console.log(fetchedRestaurant.logoPhoto);\n\t\t  console.log(fetchedRestaurant.photos);\n        setAvailableTimeSlots(availableSlots);\n      } catch (err) {\n        setError(err.response ? err.response.data.message : 'Restoran verileri alınamadı.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    const fetchMenuItems = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/api/restaurants/${id}/menu-items`);\n        setMenuItems(response.data);\n      } catch (error) {\n        console.error(\"Popüler yemekler alınırken hata oluştu:\", error);\n        setError(\"Popüler yemekler yüklenemedi\");\n      }\n    };\n\n    const fetchComments = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/api/comments/restaurant/${id}`);\n        setComments(response.data);\n      } catch (error) {\n        console.error(\"Yorumlar yüklenirken hata oluştu:\", error);\n        setError('Yorumlar yüklenemedi');\n      }\n    };\n\n    const fetchFavorites = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/api/favorites/${userId}`);\n        const favoriteRestaurantIds = response.data.map((favorite) => favorite.restaurant.id);\n        setIsFavorite(favoriteRestaurantIds.includes(Number(id)));\n      } catch (error) {\n        console.error('Favoriler alınamadı:', error.response ? error.response.data.message : error.message);\n      }\n    };\n\n    const checkLoginStatus = () => {\n      setIsLoggedIn(!!userId);\n    };\n\n    checkLoginStatus();\n    fetchMenuItems();\n    fetchRestaurantData();\n    fetchComments();\n    if (userId) {\n      fetchFavorites();\n    }\n  }, [id, userId]);\n\n  const getAvailableTimeSlots = (operatingHours) => {\n    const slots = [];\n    if (operatingHours) {\n      const [startTime, endTime] = operatingHours.split('-');\n      let currentTime = parseInt(startTime.split(':')[0], 10);\n      const endHour = parseInt(endTime.split(':')[0], 10);\n\n      while (currentTime < endHour) {\n        const startHour = `${currentTime < 10 ? '0' : ''}${currentTime}:00`;\n        slots.push(startHour);\n        currentTime += 1;\n      }\n    }\n    return slots;\n  };\n\n  // Pagination Logic\n  const indexOfLastComment = currentPage * commentsPerPage;\n  const indexOfFirstComment = indexOfLastComment - commentsPerPage;\n  const currentComments = comments.slice(indexOfFirstComment, indexOfLastComment);\n\n  const totalPages = Math.ceil(comments.length / commentsPerPage);\n\n  const handleNextPage = () => {\n    if (currentPage < totalPages) {\n      setCurrentPage((prevPage) => prevPage + 1);\n    }\n  };\n\n  const handlePreviousPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage((prevPage) => prevPage - 1);\n    }\n  };\n\n  const getMenuItemColor = (index) => {\n    const colors = [\n      'bg-blue-50',\n      'bg-green-50',\n      'bg-yellow-50',\n      'bg-pink-50',\n      'bg-purple-50',\n      'bg-orange-50',\n      'bg-teal-50',\n      'bg-indigo-50'\n    ];\n    return colors[index % colors.length];\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-100 px-4 py-8\">\n        <div className=\"max-w-6xl mx-auto\">\n          <h2 className=\"text-2xl font-bold text-center\">Yükleniyor...</h2>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 px-4 py-8\">\n      <div className=\"max-w-6xl mx-auto space-y-6\">\n        {/* Header Section with Logo */}\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex flex-col md:flex-row md:items-start gap-6\">\n            {restaurant.logoPhotoPath && (\n              <div className=\"w-32 h-32 flex-shrink-0\">\n                <img \n                  src={restaurant.logoPhotoPath} \n                  alt={`${restaurant.name} logo`}\n                  className=\"w-full h-full object-cover rounded-lg\"\n                />\n              </div>\n            )}\n            <div className=\"flex-1 space-y-4\">\n              <div className=\"flex justify-between items-start\">\n                <h1 className=\"text-3xl font-bold\">{restaurant.name}</h1>\n                {isLoggedIn && (\n                  <button\n                    className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors\"\n                    onClick={toggleFavorite}\n                    disabled={isUpdatingFavorite}\n                  >\n                    {isFavorite ? '⭐ Favorilerden Kaldır' : '☆ Favorilere Ekle'}\n                  </button>\n                )}\n              </div>\n              <div className=\"space-y-2\">\n                <p><strong>Adres:</strong> {restaurant.address}</p>\n                <p><strong>Etiketler:</strong> {restaurant.tags?.join(', ')}</p>\n                <p><strong>Çalışma Saatleri:</strong> {restaurant.operatingHours}</p>\n                <p>\n                  <strong>Web Sitesi:</strong>{' '}\n                  <a href={restaurant.websiteLink} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-600 hover:underline\">\n                    {restaurant.websiteLink}\n                  </a>\n                </p>\n              </div>\n            </div>\n\n          </div>\n        </div>\n\n        {/* Photos Section */}\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <h2 className=\"text-2xl font-bold mb-4\">Fotoğraflar</h2>\n          {restaurant.photoPaths && restaurant.photoPaths.length > 0 ? (\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              {restaurant.photoPaths.map((photo, index) => (\n                <img key={index} src={photo} alt={`Restaurant fotoğrafı ${index + 1}`} className=\"w-full h-48 object-cover rounded-lg hover:scale-105 transition-transform\" />\n              ))}\n            </div>\n          ) : (\n            <p>Fotoğraflar bulunmamaktadır</p>\n          )}\n        </div>\n\n        {/* Popular Dishes Section */}\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <h2 className=\"text-2xl font-bold mb-4\">Popüler Yemekler</h2>\n          {error && <p className=\"text-red-600 mb-4\">{error}</p>}\n          {menuItems.length > 0 ? (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {menuItems.map((item, index) => (\n                <div \n                  key={item.id} \n                  className={`${getMenuItemColor(index)} p-6 rounded-lg shadow-sm hover:shadow-md transition-shadow border border-gray-100`}\n                >\n                  <div className=\"flex flex-col h-full\">\n                    <h3 className=\"text-xl font-semibold mb-3\">{item.name}</h3>\n                    <div className=\"flex-1 space-y-2\">\n                      <p className=\"text-gray-700\"><strong>Açıklama:</strong> {item.description}</p>\n                      <p className=\"text-gray-700\"><strong>Fiyat:</strong> {item.price} ₺</p>\n                      <div className=\"flex flex-wrap gap-2 mt-2\">\n                        {item.tags?.map((tag, tagIndex) => (\n                          <span \n                            key={tagIndex}\n                            className=\"inline-block px-2 py-1 bg-white rounded-full text-sm text-gray-600 border border-gray-200\"\n                          >\n                            {tag}\n                          </span>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <p>Yemekler bulunmamaktadır.</p>\n          )}\n        </div>\n\n{/* Comments Section */}\n<div className=\"bg-white rounded-lg shadow-sm p-6\">\n  <h2 className=\"text-2xl font-bold mb-6 text-gray-800\">Yorumlar</h2>\n  {currentComments.length > 0 ? (\n    <div className=\"space-y-4\">\n      <div className=\"p-8 border border-gray-100 rounded-xl bg-gradient-to-br from-gray-50 to-white shadow-sm\">\n        <div className=\"flex items-center gap-4 mb-6 border-b border-gray-100 pb-4\">\n          <div className=\"w-14 h-14 bg-gradient-to-br from-blue-500 to-blue-600 rounded-full flex items-center justify-center shadow-md\">\n            <span className=\"text-2xl font-bold text-white\">\n              {currentComments[0].user?.name?.charAt(0).toUpperCase() || '?'}\n            </span>\n          </div>\n          <div className=\"flex-1\">\n            <h3 className=\"text-lg font-semibold text-gray-800\">\n              {currentComments[0].user?.name || 'Bilinmeyen Kullanıcı'}\n            </h3>\n            <p className=\"text-sm text-gray-500\">\n              {new Date(currentComments[0].createdAt).toLocaleDateString('tr-TR', {\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric'\n              })}\n            </p>\n          </div>\n          <div className=\"flex flex-col items-end\">\n            <div className=\"flex items-center mb-1\">\n              {[...Array(5)].map((_, index) => (\n                <span key={index} className=\"text-yellow-400 text-xl\">\n                  {index < currentComments[0].rating ? '★' : '☆'}\n                </span>\n              ))}\n            </div>\n            <span className=\"text-sm font-medium text-gray-600\">\n              {currentComments[0].rating}/5 Puan\n            </span>\n          </div>\n        </div>\n        <div className=\"space-y-3\">\n          <p className=\"text-gray-700 leading-relaxed text-lg pl-4 border-l-4 border-blue-100 italic\">\n            \"{currentComments[0].comment}\"\n          </p>\n        </div>\n      </div>\n    </div>\n  ) : (\n    <div className=\"text-center py-8\">\n      <p className=\"text-gray-500 text-lg\">Henüz yorum bulunmamaktadır.</p>\n    </div>\n  )}\n\n  {/* Updated Pagination Controls */}\n  {comments.length > 0 && (\n    <div className=\"flex items-center justify-center gap-4 mt-8\">\n      <button \n        onClick={handlePreviousPage} \n        disabled={currentPage === 1}\n        className=\"px-4 py-2 bg-red-500 text-white rounded-lg disabled:bg-gray-300 disabled:cursor-not-allowed hover:bg-red-600 transition-colors flex items-center gap-2\"\n      >\n        ← Önceki Yorum\n      </button>\n      \n      <span className=\"text-gray-700 font-medium margin:10px\">\n        {currentPage} / {totalPages}\n      </span>\n      \n      <button \n        onClick={handleNextPage} \n        disabled={currentPage === totalPages}\n        className=\"px-4 py-2 bg-red-500 text-white rounded-lg disabled:bg-gray-300 disabled:cursor-not-allowed hover:bg-red-600 transition-colors flex items-center gap-2\"\n      >\n        Sonraki Yorum →\n      </button>\n    </div>\n  )}\n</div>\n\n        {/* Reservation Form */}\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <ReservationForm\n            onSubmit={handleReservation}\n            availableTimeSlots={availableTimeSlots || []}\n            maxGuests={restaurant.maxGuests}\n            terms={restaurant.additionalCondition}\n            reservationTags={[\n              restaurant.birthdayParty && 'Doğum Günü',\n              restaurant.anniversary && 'Yıldönümü',\n              restaurant.jobMeeting && 'İş Yemeği',\n              restaurant.proposal && 'Evlilik Teklifi',\n            ].filter(Boolean)}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Restaurant;\n\n\n","import React, { useState } from 'react';\nimport './LoginForm.css'\n\nconst LoginForm = ({ onSubmit }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const validateForm = () => {\n    if (!email || !password) {\n      setError('Lütfen tüm alanları doldurun.');\n      return false;\n    }\n\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    const phoneRegex = /^[0-9]{5,10}$/;\n\n    if (!emailRegex.test(email) && !phoneRegex.test(email)) {\n      setError('Geçerli bir e-posta veya telefon numarası girin.');\n      return false;\n    }\n\n    if (password.length < 8 || password.length > 12) {\n      setError('Şifre 8 ile 12 karakter arasında olmalıdır.');\n      return false;\n    }\n\n    setError(''); \n    return true;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (validateForm()) {\n      onSubmit({ email, password });\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"login-form\">\n      {error && <p className=\"error-message\">{error}</p>} \n\n      <div className=\"input-group\">\n        <label htmlFor=\"email\">E-posta</label>\n        <input\n          type=\"text\"\n          id=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </div>\n\n      <div className=\"input-group\">\n        <label htmlFor=\"password\">Şifre</label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </div>\n\n      <button type=\"submit\">Giriş Yap</button>\n\n      <div className=\"forgot-password\">\n        <a href=\"/forgot-password\">Şifremi unuttum?</a>\n      </div>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport LoginForm from '../components/LoginForm';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nconst LoginPage = () => {\n  const navigate = useNavigate();\n\n  const handleLogin = async (formData) => {\n\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/login`, formData);\n\n      if (response.status === 200) {\n        const { id, role } = response.data; \n\n        sessionStorage.setItem('role', role); \n\n        if (role === 'user') {\n          sessionStorage.setItem('userId', id);\n          navigate('/userProfile');\n        } else {\n          sessionStorage.setItem('ownerId', id);\n          navigate('/ownerProfile');\n        }\n      }\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n      alert(\"Giriş başarısız! Lütfen bilgilerinizi kontrol edin.\");\n    }\n  };\n\n  const titleStyle = {\n    fontSize: '32px',\n    fontWeight: 'bold',\n    color: 'black',\n    textAlign: 'center',\n    marginBottom: '20px',\n    fontFamily: \"'Be Vietnam Pro', 'sans-serif'\",\n    padding: '20px'\n  };\n\n  return (\n    <div className=\"main-content\">\n      <div className=\"login-form-container\">\n        <h2 style={titleStyle}>Giriş Yap</h2>\n        <LoginForm onSubmit={handleLogin} />\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n\n\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nconst ForgotPassword = () => {\n  const [email, setEmail] = useState(''); \n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  const isEmailValid = (email) => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!email) {\n      setError('Lütfen e-posta adresinizi girin.');\n      return;\n    }\n\n    if (!isEmailValid(email)) {\n      setError('Geçerli bir e-posta adresi girin.');\n      return;\n    }\n\n    setError('');\n\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/forgot`, {\n        email\n      });\n\n      if (response.status === 200) {\n        setMessage('E-posta gönderildi!');\n        navigate('/reset-password');\n      }\n    } catch (error) {\n      console.error(\"Password reset request failed:\", error);\n      setError('Şifre sıfırlama talebi sırasında bir hata oluştu. Lütfen tekrar deneyin.');\n    }\n  };\n\n  const titleStyle = {\n    fontSize: '32px',\n    fontWeight: 'bold',\n    color: 'black',\n    textAlign: 'center',\n    marginBottom: '20px',\n    fontFamily: \"'Be Vietnam Pro', 'sans-serif'\",\n    padding: '20px'\n  };\n\n  return (\n    <div className=\"forgot-password\">\n      <h2 style = {titleStyle}>Şifremi Unuttum</h2>\n      <form onSubmit={handleSubmit}>\n        {error && <p className=\"error-message\">{error}</p>}\n        {message && <p className=\"success-message\">{message}</p>}\n\n        <div className=\"input-group\">\n          <label htmlFor=\"email\">E-posta adresiniz</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </div>\n\n        <button type=\"submit\">Şifre sıfırlama talebi</button>\n      </form>\n    </div>\n  );\n};\n\nexport default ForgotPassword;\n\n\n","import React, { useState } from 'react';\nimport './LoginForm.css';\n\nconst availableTags = [\n  'Pizza', 'Kebap', 'Vegan', 'Deniz Ürünleri', 'Hamburger', 'Steakhouse', 'Etnik', 'Casual Dining','Brasserie', 'Izgara', \n  'Kahve', 'Tatlı', 'Çorba', 'Makarna', 'Sushi','Fine Dining', 'Fast Casual', 'Açık Büfe','Kahvaltı', 'Brunch', 'Vejetaryen', \n  'Fast Food', 'Şarap', 'Bistro', 'Bar', 'Pub', 'Lounge', 'Kafe', 'Speakeasy','Gurme', 'Organik', 'Gluten Free', 'Balık', \n  'Döner', 'Pide', 'Ramen', 'Noodle','Akdeniz', 'Asya', 'Avrupa', 'Orta Doğu', 'Güney Amerika', 'Kuzey Amerika', 'Uzak Doğu',\n];\n\nconst OwnerSignupForm = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [address, setAddress] = useState('');\n  const [twoPersonTables, setTwoPersonTables] = useState('');\n  const [fourPersonTables, setFourPersonTables] = useState('');\n  const [sixPersonTables, setSixPersonTables] = useState('');\n  const [operatingHours, setOperatingHours] = useState('');\n  const [photos, setPhotos] = useState([]);\n  const [logo, setLogo] = useState(null);\n  const [websiteLink, setWebsiteLink] = useState('');\n  const [acceptConditions, setAcceptConditions] = useState(null);\n  const [specialDays, setSpecialDays] = useState([]);\n  const [additionalCondition, setAdditionalCondition] = useState('');\n  const [tags, setTags] = useState([]); \n  const [error, setError] = useState('');\n\n  const isPasswordStrong = (password) => {\n    const hasUpperCase = /[A-Z]/.test(password);\n    const hasLowerCase = /[a-z]/.test(password);\n    const hasNumber = /\\d/.test(password);\n    const isCorrectLength = password.length >= 8 && password.length <= 12;\n\n    return hasUpperCase && hasLowerCase && hasNumber && isCorrectLength;\n  };\n\n  const handleTagSelection = (tag) => {\n    setTags((prev) => \n      prev.includes(tag) ? prev.filter((t) => t !== tag) : [...prev, tag]\n    );\n  };\n\n  const handlePhotosChange = (e) => {\n    const selectedFiles = Array.from(e.target.files);\n    if (selectedFiles.length < 3) {\n      setError('Lütfen en az 3 fotoğraf yükleyin.');\n      return;\n    }\n    setPhotos(selectedFiles);\n    setError('');\n  };\n\n  const handleLogoChange = (e) => {\n    setLogo(e.target.files[0]);\n  };\n\n  const handleSpecialDaysChange = (e) => {\n    const value = e.target.value;\n    setSpecialDays((prev) =>\n      prev.includes(value) ? prev.filter((day) => day !== value) : [...prev, value]\n    );\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (\n      !name ||\n      !phoneNumber ||\n      !email ||\n      !password ||\n      !address ||\n      photos.length < 3 ||\n      !logo ||\n      !twoPersonTables ||\n      !fourPersonTables ||\n      !sixPersonTables ||\n      !operatingHours ||\n      acceptConditions === null\n    ) {\n      setError('Lütfen tüm zorunlu alanları doldurun');\n      return;\n    }\n\n    if (tags.length === 0) {\n      setError('Lütfen en az bir etiket seçin.');\n      return;\n    }\n\n    if (name.length > 50) {\n      alert('İsim 50 karakterden uzun olamaz.');\n      return;\n    }\n\n    const phoneRegex = /^[0-9]{5,10}$/;\n    if (!phoneRegex.test(phoneNumber)) {\n      setError('Geçerli bir telefon numarası girin.');\n      return;\n    }\n\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(email)) {\n      setError('Geçerli bir e-posta adresi girin.');\n      return;\n    }\n\n    if (!isPasswordStrong(password)) {\n      setError(\n        'Şifre 8 ile 12 karakter arasında olmalıdır. Bir büyük harf, bir küçük harf ve bir sayı içermelidir.'\n      );\n      setPassword('');\n      return;\n    }\n\n    const hoursRegex = /^\\s*\\d{1,2}\\.\\d{2}\\s*-\\s*\\d{1,2}\\.\\d{2}\\s*$/;\n    if (!hoursRegex.test(operatingHours)) {\n      setError('Geçerli bir çalışma saatleri formatı girin (ör. 09.00 - 22.00).');\n      return;\n    }\n    const urlRegex = /^(https?:\\/\\/)?([\\da-z.-]+)\\.([a-z.]{2,6})([/\\w .-]*)*\\/?$/;\n    if (websiteLink && !urlRegex.test(websiteLink)) {\n      setError('Geçerli bir website linki girin. Örnek: https://www.ornek.com');\n      return;\n    }\n\n    setError('');\n    onSubmit({\n      name,\n      phoneNumber,\n      email,\n      password,\n      address,\n      photos,\n      logo,\n      twoPersonTables,\n      fourPersonTables,\n      sixPersonTables,\n      operatingHours,\n      websiteLink,\n      acceptConditions,\n      specialDays,\n      additionalCondition: acceptConditions === 'yes' ? additionalCondition : '',\n      tags,\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"signup-form\">\n      {error && <p className=\"error-message\">{error}</p>}\n\n      <div className=\"input-group\">\n        <label htmlFor=\"name\">Restoran adı <span style={{ color: 'red' }}>*</span></label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n      </div>\n\n      <div className=\"input-group\">\n        <label htmlFor=\"address\">Restoran adresi <span style={{ color: 'red' }}>*</span></label>\n        <input\n          type=\"text\"\n          id=\"address\"\n          value={address}\n          onChange={(e) => setAddress(e.target.value)}\n        />\n      </div>\n\n      <div className=\"input-group\">\n        <label htmlFor=\"phoneNumber\">Telefon numarası <span style={{ color: 'red' }}>*</span></label>\n        <input\n          type=\"tel\"\n          id=\"phoneNumber\"\n          value={phoneNumber}\n          onChange={(e) => setPhoneNumber(e.target.value)}\n        />\n      </div>\n\n      <div className=\"input-group\">\n        <label htmlFor=\"email\">E-posta <span style={{ color: 'red' }}>*</span></label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </div>\n\n      <div className=\"input-group\">\n        <label htmlFor=\"password\">Şifre <span style={{ color: 'red' }}>*</span></label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </div>\n\n      <div className=\"input-group\">\n        <label htmlFor=\"twoPersonTables\">2 kişilik masa sayısı <span style={{ color: 'red' }}>*</span></label>\n        <input\n          type=\"number\"\n          id=\"twoPersonTables\"\n          value={twoPersonTables}\n          min={0}\n          onChange={(e) => setTwoPersonTables(e.target.value)}\n        />\n      </div>\n\n      <div className=\"input-group\">\n        <label htmlFor=\"fourPersonTables\">4 kişilik masa sayısı <span style={{ color: 'red' }}>*</span></label>\n        <input\n          type=\"number\"\n          id=\"fourPersonTables\"\n          value={fourPersonTables}\n          min={0}\n          onChange={(e) => setFourPersonTables(e.target.value)}\n        />\n      </div>\n\n      <div className=\"input-group\">\n        <label htmlFor=\"sixPersonTables\">6 kişilik masa sayısı <span style={{ color: 'red' }}>*</span></label>\n        <input\n          type=\"number\"\n          id=\"sixPersonTables\"\n          value={sixPersonTables}\n          min={0}\n          onChange={(e) => setSixPersonTables(e.target.value)}\n        />\n      </div>\n\n      <div className=\"input-group\">\n        <label htmlFor=\"operatingHours\">Çalışma saatleri <span style={{ color: 'red' }}>*</span></label>\n        <input\n          type=\"text\"\n          id=\"operatingHours\"\n          value={operatingHours}\n          onChange={(e) => setOperatingHours(e.target.value)}\n          placeholder=\"Örnek: 09.00 - 22.00\"\n        />\n      </div>\n\n        <div className=\"input-group\">\n          <label htmlFor=\"acceptConditions\">\n            Şartlarınız var mı? <span style={{ color: 'red' }}>*</span>\n          </label>\n        <div style={{ display: 'flex', gap: '10px', alignItems: 'center' }}>\n          <label style={{ display: 'flex', alignItems: 'center', gap: '5px' }}>\n            <input\n              type=\"radio\"\n              name=\"acceptConditions\"\n              value=\"yes\"\n              checked={acceptConditions === 'yes'}\n              onChange={() => setAcceptConditions('yes')}\n            />\n            Evet\n          </label>\n          <label style={{ display: 'flex', alignItems: 'center', gap: '5px' }}>\n            <input\n              type=\"radio\"\n              name=\"acceptConditions\"\n              value=\"no\"\n              checked={acceptConditions === 'no'}\n              onChange={() => setAcceptConditions('no')}\n            />\n            Hayır\n          </label>\n        </div>\n        {acceptConditions === 'yes' && (\n          <div>\n            <label htmlFor=\"additionalCondition\">Şartlarınızı belirtin:</label>\n            <input\n              type=\"text\"\n              id=\"additionalCondition\"\n              value={additionalCondition}\n              onChange={(e) => setAdditionalCondition(e.target.value)}\n            />\n          </div>\n        )}\n      </div>\n\n      <div className=\"input-group\">\n        <label htmlFor=\"photos\">Restoran fotoğrafları (en az 3 adet) <span style={{ color: 'red' }}>*</span></label>\n        <input\n          type=\"file\"\n          id=\"photos\"\n          accept=\"image/*\"\n          multiple\n          onChange={handlePhotosChange}\n        />\n      </div>\n\n      <div className=\"input-group\">\n        <label htmlFor=\"logo\">Restoran logosu <span style={{ color: 'red' }}>*</span></label>\n        <input\n          type=\"file\"\n          id=\"logo\"\n          accept=\"image/*\"\n          onChange={handleLogoChange}\n        />\n      </div>\n\n      <div className=\"input-group\">\n        <label htmlFor=\"specialDays\">\n          Özel gün rezervasyonları alıyor musunuz?\n        </label>\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\n          <label>\n            <input\n              type=\"checkbox\"\n              value=\"doğum günü\"\n              checked={specialDays.includes('doğum günü')}\n              onChange={handleSpecialDaysChange}\n            />\n            Doğum Günü\n          </label>\n          <label>\n            <input\n              type=\"checkbox\"\n              value=\"yıldönümü\"\n              checked={specialDays.includes('yıldönümü')}\n              onChange={handleSpecialDaysChange}\n            />\n            Yıldönümü\n          </label>\n          <label>\n            <input\n              type=\"checkbox\"\n              value=\"iş yemeği\"\n              checked={specialDays.includes('iş yemeği')}\n              onChange={handleSpecialDaysChange}\n            />\n            İş Yemeği\n          </label>\n          <label>\n            <input\n              type=\"checkbox\"\n              value=\"evlilik teklifi\"\n              checked={specialDays.includes('evlilik teklifi')}\n              onChange={handleSpecialDaysChange}\n            />\n            Evlilik Teklifi\n          </label>\n        </div>\n      </div>\n\n      <div className=\"input-group\">\n        <label>Restoran Etiketleri</label>\n        <div className=\"tags-container\">\n          {availableTags.map((tag) => (\n            <label key={tag} className=\"tag-option\">\n              <input\n                type=\"checkbox\"\n                value={tag}\n                checked={tags.includes(tag)}\n                onChange={() => handleTagSelection(tag)}\n              />\n              {tag}\n            </label>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"input-group\">\n        <label htmlFor=\"websiteLink\">Website linki</label>\n        <input\n          type=\"url\"\n          id=\"websiteLink\"\n          value={websiteLink}\n          onChange={(e) => setWebsiteLink(e.target.value)}\n        />\n      </div>\n\n      <button type=\"submit\">Kayıt Ol</button>\n    </form>\n  );\n};\n\nexport default OwnerSignupForm;\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport OwnerSignupForm from '../components/OwnerSignupForm';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nconst OwnerSignup = () => {\n  const navigate = useNavigate();\n\n  const handleOwnerSignup = async (formData) => {\n    try {\n      const formDataToSend = new FormData();\n\n      const restaurantData = {\n        name: formData.name,\n        phoneNumber: formData.phoneNumber,\n        email: formData.email,\n        password: formData.password,\n        address: formData.address,\n        operatingHours: formData.operatingHours,\n        websiteLink: formData.websiteLink,\n        additionalCondition:\n          formData.acceptConditions === 'yes' ? formData.additionalCondition : '',\n        birthdayParty: formData.specialDays.includes('doğum günü'),\n        anniversary: formData.specialDays.includes('yıldönümü'),\n        jobMeeting: formData.specialDays.includes('iş yemeği'),\n        proposal: formData.specialDays.includes('evlilik teklifi'),\n        tags: formData.tags,\n      };\n\n      const tables = [];\n      let tableIndex = 1;\n      ['twoPersonTables', 'fourPersonTables', 'sixPersonTables'].forEach((type, index) => {\n        const capacity = [2, 4, 6][index];\n        for (let i = 0; i < parseInt(formData[type]); i++) {\n          tables.push({\n            name: `Table ${tableIndex++}`,\n            available: true,\n            capacity: capacity,\n          });\n        }\n      });\n      restaurantData.tables = tables;\n\n      formDataToSend.append('restaurant', JSON.stringify(restaurantData));\n\n      if (formData.logo) {\n        formDataToSend.append('logoPhoto', formData.logo);\n      }\n\n      formData.photos.forEach((photo) => {\n        formDataToSend.append('photos', photo);\n      });\n\n      const response = await axios.post(`${API_BASE_URL}/api/restaurants`, formDataToSend, {\n          headers: { 'Content-Type': 'multipart/form-data' },\n        }\n      );\n\n      if (response.status === 200) {\n        sessionStorage.setItem('ownerId', response.data.id);\n        sessionStorage.setItem('role', response.data.role);\n\n        alert('Kayıt başarılı! Giriş sayfasına yönlendiriliyorsunuz.');\n        setTimeout(() => navigate('/login'), 1000);\n      }\n    } catch (error) {\n      if (error.response && error.response.status === 409) {\n        alert('Bu e-posta ile bir hesap zaten var. Lütfen giriş yapın.');\n      } else {\n        console.error('Owner signup failed:', error);\n        alert('Kaydolma işlemi başarısız! Lütfen bilgilerinizi kontrol edin.');\n      }\n    }\n  };\n\n  const titleStyle = {\n    fontSize: '32px',\n    fontWeight: 'bold',\n    color: 'black',\n    textAlign: 'center',\n    marginBottom: '20px',\n    fontFamily: \"'Be Vietnam Pro', 'sans-serif'\",\n    padding: '20px',\n  };\n\n  return (\n    <div>\n      <h2 style={titleStyle}>Restoran Kaydı</h2>\n      <OwnerSignupForm onSubmit={handleOwnerSignup} />\n    </div>\n  );\n};\n\nexport default OwnerSignup;","import React, { useState } from 'react';\nimport './UserSignupForm.css';\n\nconst UserSignupForm = ({ onSubmit }) => {\n  const [fullName, setFullName] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const isPhoneNumberValid = (phone) => {\n    const phoneRegex = /^[0-9]{5,15}$/; \n    return phoneRegex.test(phone);\n  };\n\n  const isEmailValid = (email) => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n\n  const isPasswordStrong = (password) => {\n    const hasUpperCase = /[A-Z]/.test(password);\n    const hasLowerCase = /[a-z]/.test(password);\n    const hasNumber = /\\d/.test(password);\n    const isCorrectLength = password.length >= 8 && password.length <= 12;\n  \n    return hasUpperCase && hasLowerCase && hasNumber && isCorrectLength;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!fullName || !phoneNumber || !email || !password) {\n      setError('Lütfen tüm alanları doldurun');\n      return;\n    }\n\n    if (fullName.length > 30) {\n      alert(\"İsim 30 karakterden uzun olamaz.\");\n      return;\n    }\n\n    if (!isPhoneNumberValid(phoneNumber)) {\n      setError('Geçerli bir telefon numarası girin.');\n      return;\n    }\n\n    if (!isEmailValid(email)) {\n      setError('Geçerli bir e-posta adresi girin.');\n      return;\n    }\n\n    if (!isPasswordStrong(password)) {\n      setError('Şifre 8 ile 12 karakter arasında olmalıdır. Bir büyük harf, bir küçük harf ve bir rakam içermelidir.');\n      return;\n    }\n\n    setError('');\n    onSubmit({ fullName, phoneNumber, email, password });\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"signup-form\">\n      {error && <p className=\"error-message\">{error}</p>}\n\n      <div className=\"input-group\">\n        <label htmlFor=\"fullName\">İsim ve soyisim</label>\n        <input\n          type=\"text\"\n          id=\"fullName\"\n          value={fullName}\n          onChange={(e) => setFullName(e.target.value)}\n        />\n      </div>\n\n      <div className=\"input-group\">\n        <label htmlFor=\"phoneNumber\">Telefon numarası</label>\n        <input\n          type=\"tel\"\n          id=\"phoneNumber\"\n          value={phoneNumber}\n          onChange={(e) => setPhoneNumber(e.target.value)}\n        />\n      </div>\n\n      <div className=\"input-group\">\n        <label htmlFor=\"email\">E-posta</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </div>\n\n      <div className=\"input-group\">\n        <label htmlFor=\"password\">Şifre</label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </div>\n\n      <button type=\"submit\">Kayıt Ol</button>\n    </form>\n  );\n};\n\nexport default UserSignupForm;\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport UserSignupForm from '../components/UserSignupForm';\nimport './UserSignup.css';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nconst UserSignup = () => {\n  const navigate = useNavigate();\n\n  const handleUserSignup = async (formData) => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/users`, formData);\n\n      if (response.status === 200) {\n        alert('Kayıt başarılı! Giriş sayfasına yönlendiriliyorsunuz.');\n        setTimeout(() => navigate('/login'), 1000);\n      }\n    } catch (error) {\n      if (error.response && error.response.status === 500) {\n        alert('Bu e-posta veya telefon numarası ile bir hesap zaten var. Lütfen giriş yapın.');\n      } else {\n        console.error('Kayıt işlemi başarısız:', error);\n        alert('Kayıt işlemi başarısız! Lütfen bilgilerinizi kontrol edin.');\n      }\n    }\n  };\n\n  const titleStyle = {\n    fontSize: '32px',\n    fontWeight: 'bold',\n    color: 'black',\n    textAlign: 'center',\n    marginBottom: '20px',\n    fontFamily: \"'Be Vietnam Pro', 'sans-serif'\",\n    padding: '20px'\n  };\n\n  return (\n    <div className=\"signup-page\">\n      <h2 style={titleStyle}>Kullanıcı Kaydı</h2>\n        <UserSignupForm onSubmit={handleUserSignup} />\n    </div>\n  );\n};\n\nexport default UserSignup;\n\n\n\n","import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { getDominantColor, isLightColor } from '../utils/colorUtils';\nimport './UserProfile.css'; \nimport './Home.css';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nconst UserProfile = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [comments, setComments] = useState([]);\n  const [visibleComments, setVisibleComments] = useState(5); // State to control visible comments\n  const [id, setUserId] = useState(null);\n  const navigate = useNavigate();\n  const [dominantColor, setDominantColor] = useState(null);\n\n  useEffect(() => {\n    const storedUserId = sessionStorage.getItem('userId');\n    if (storedUserId) {\n      setUserId(storedUserId);\n    } else {\n      navigate('/login');\n    }\n  }, [navigate]);\n\n  useEffect(() => {\n    if (id) {\n      const fetchUserData = async () => {\n        try {\n          const response = await axios.get(`${API_BASE_URL}/api/users/${id}`);\n          const data = response.data;\n          setName(data.name);\n          setEmail(data.email);\n        } catch (error) {\n          console.error(\"Error fetching user data:\", error);\n        }\n      };\n\n      const fetchUserComments = async () => {\n        try {\n          const response = await axios.get(`${API_BASE_URL}/api/comments/user/${id}`);\n          setComments(response.data);\n        } catch (error) {\n          console.error(\"Error fetching user comments:\", error);\n        }\n      };\n\n      fetchUserData();\n      fetchUserComments();\n    }\n  }, [id]);\n\n  useEffect(() => {\n    const analyzeBackgroundImage = async () => {\n        try {\n            const img = new Image();\n            img.crossOrigin = \"Anonymous\";\n            \n            // Create a promise to handle image loading\n            const imageLoadPromise = new Promise((resolve, reject) => {\n                img.onload = () => resolve();\n                img.onerror = () => reject(new Error('Failed to load image'));\n            });\n\n            img.src = '/prof-back1.jpg';\n\n            // Wait for image to load\n            await imageLoadPromise;\n            \n            const color = await getDominantColor(img);\n            setDominantColor(color);\n            \n            // Apply colors to CSS variables\n            document.documentElement.style.setProperty(\n                '--dominant-color', \n                `rgb(${color.r}, ${color.g}, ${color.b})`\n            );\n            document.documentElement.style.setProperty(\n                '--dominant-color-alpha', \n                `rgba(${color.r}, ${color.g}, ${color.b}, 0.85)`\n            );\n\n            // Add light/dark class to delete button\n            const deleteBtn = document.querySelector('.delete-account-btn');\n            if (deleteBtn) {\n                deleteBtn.classList.toggle(\n                    'light-bg', \n                    isLightColor(color.r, color.g, color.b)\n                );\n            }\n        } catch (error) {\n            console.error('Error analyzing background image:', error);\n        }\n    };\n\n    analyzeBackgroundImage();\n    \n    // Cleanup function\n    return () => {\n        // Reset CSS variables to default when component unmounts\n        document.documentElement.style.removeProperty('--dominant-color');\n        document.documentElement.style.removeProperty('--dominant-color-alpha');\n    };\n}, []);\n\n  const handleShowMoreComments = () => {\n    setVisibleComments((prev) => prev + 5);\n  };\n\n  const handleEditProfileRedirect = () => {\n    navigate('/edit-userProfile');\n  };\n\n  const handlePasswordChangeRedirect = () => {\n    navigate('/user-change-password');\n  };\n\n  const handleReservationsRedirect = () => {\n    navigate('/user-reservations');\n  };\n\n  const handleFavoritesRedirect = () => {\n    navigate('/favorites');\n  };\n\n  const handleDeleteAccount = async () => {\n    if (window.confirm('Hesabınızı silmek istediğinizden emin misiniz?')) {\n      try {\n        await axios.delete(`${API_BASE_URL}/api/users/${id}`);\n        sessionStorage.removeItem('userId'); \n        navigate('/login');  \n      } catch (error) {\n        console.error('Hesap silinirken hata oluştu:', error);\n      }\n    }\n  };\n\n  const handleDeleteComment = async (commentId) => {\n    if (window.confirm('Bu yorumu silmek istediğinizden emin misiniz?')) {\n      try {\n        await axios.delete(`${API_BASE_URL}/api/comments/${commentId}`);\n        setComments(comments.filter(comment => comment.id !== commentId));\n      } catch (error) {\n        console.error('Yorum silinirken hata oluştu:', error);\n      }\n    }\n  };\n\n  return (\n    <div className=\"page-container\">\n      <div className=\"header\">\n        <div className=\"header-content\"></div>\n      </div>\n      \n      <div style={{ display: 'flex' }}>\n        <div className=\"sidebar\">\n          <div className=\"sidebar-menu\">\n            <button className=\"sidebar-item sidebar-item-active\">Profil</button>\n            <button className=\"sidebar-item\" onClick={handleReservationsRedirect}>\n              Rezervasyonlarım\n            </button>\n            <button className=\"sidebar-item\" onClick={handleFavoritesRedirect}>\n              Favorilerim\n            </button>\n            <button className=\"sidebar-item\" onClick={handlePasswordChangeRedirect}>\n              Şifre Değiştir\n            </button>\n          </div>\n        </div>\n\n        <div style={{ flex: 1 }}>\n        <div className=\"profile-section\" style={{\n          backgroundColor: dominantColor ? `rgb(${dominantColor.r}, ${dominantColor.g}, ${dominantColor.b})` : 'transparent'\n        }}>\n            <div className=\"profile-info\">\n              <img \n                src=\"wizard.jpg\" \n                alt=\"Profile\" \n                className=\"profile-image\" \n              />\n              <div className=\"profile-details\">\n                <div className=\"profile-name\">{name}</div>\n                <div className=\"profile-email\">{email}</div>\n              </div>\n            </div>\n            <div className=\"profile-actions\">\n              <button \n                className=\"edit-profile-btn\" \n                onClick={handleEditProfileRedirect}\n              >\n                Profili Düzenle\n              </button>\n              <button \n                className=\"delete-account-btn\" \n                onClick={handleDeleteAccount}\n              >\n                Hesabı Sil\n              </button>\n            </div>\n          </div>\n\n          <div className=\"comments-header\">Yorumlar</div>\n\n          {comments.length > 0 ? (\n            <div className=\"comments-section\">\n              {comments.slice(0, visibleComments).map((comment, index) => (\n                <div key={index} className=\"comment-item\">\n                  <div className=\"comment-details\">\n                    <div className=\"comment-text\">\n                      <div className=\"comment-restaurant\">{comment.restaurant.name}</div>\n                      <div className=\"comment-comment\">{comment.comment}</div>\n                    </div>\n                  </div>\n                  <div className=\"comment-meta\">\n                    <div className=\"comment-date\">\n                      {new Date(comment.createdAt).toLocaleDateString()}\n                    </div>\n                    <div className=\"comment-rating\">{comment.rating}/5</div>\n                    <button \n                      className=\"delete-comment-btn\" \n                      onClick={() => handleDeleteComment(comment.id)}\n                    >\n                      Yorum Sil\n                    </button>\n                  </div>\n                </div>\n              ))}\n              {visibleComments < comments.length && (\n                <button \n                  className=\"show-more-btn\" \n                  onClick={handleShowMoreComments}\n                >\n                  Daha Fazla Yükle\n                </button>\n              )}\n            </div>\n          ) : (\n            <div className=\"no-comments\">Henüz yorum yapılmamış.</div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserProfile;","export const getDominantColor = (imgEl) => {\n    return new Promise((resolve) => {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        \n        // Make canvas small for efficiency\n        canvas.width = 1;\n        canvas.height = 1;\n        \n        try {\n            // Draw image scaled down to 1x1 pixel\n            ctx.drawImage(imgEl, 0, 0, 1, 1);\n            const [r, g, b] = ctx.getImageData(0, 0, 1, 1).data;\n            \n            // Clean up\n            canvas.remove();\n            \n            resolve({ r, g, b });\n        } catch (error) {\n            console.error('Error getting dominant color:', error);\n            resolve({ r: 237, g: 56, b: 18 }); // Fallback color\n        }\n    });\n};\n\nexport const isLightColor = (r, g, b) => {\n    const brightness = (r * 299 + g * 587 + b * 114) / 1000;\n    return brightness > 128;\n};","import React, { useState } from 'react';\nimport './EditUserProfileForm.css';\n\nconst EditUserProfileForm = ({\n  name,\n  phoneNumber,\n  email,\n  setName,\n  setPhoneNumber, \n  setEmail,\n  error,\n  onSubmit\n}) => {\n  const [formError, setFormError] = useState('');\n\n  const isPhoneNumberValid = (phone) => {\n    const phoneRegex = /^[0-9]{5,15}$/;\n    return phoneRegex.test(phone);\n  };\n\n  const isEmailValid = (email) => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!name || !phoneNumber || !email) {\n      setFormError('Lütfen tüm alanları doldurun');\n      return;\n    }\n    if (name.length > 30) {\n      setFormError('İsim 30 karakterden uzun olamaz.');\n      return;\n    }\n    if (!isPhoneNumberValid(phoneNumber)) {\n      setFormError('Geçerli bir telefon numarası girin (5-15 rakam).');\n      return;\n    }\n    if (!isEmailValid(email)) {\n      setFormError('Geçerli bir e-posta adresi girin.');\n      return;\n    }\n    setFormError('');\n    onSubmit(e);\n  };\n\n  return (\n    <div className=\"form-container\">\n      <div className=\"login-form\">\n        {/* Form */}\n        <form onSubmit={handleSubmit} className=\"user-form\">\n          {(formError || error) && (\n            <p className=\"error-message\">{formError || error}</p>\n          )}\n          \n          <div className=\"input-group\">\n            <label htmlFor=\"name\">İsim ve soyisim</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n          </div>\n\n          <div className=\"input-group\">\n            <label htmlFor=\"phoneNumber\">Telefon numarası</label>\n            <input\n              type=\"tel\"\n              id=\"phoneNumber\"\n              value={phoneNumber}\n              onChange={(e) => setPhoneNumber(e.target.value)}\n            />\n          </div>\n\n          <div className=\"input-group\">\n            <label htmlFor=\"email\">E-posta</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n\n          <button type=\"submit\">Bilgileri Güncelle</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default EditUserProfileForm;\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport UserProfileForm from '../components/EditUserProfileForm';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nconst EditUserProfile = () => {\n  const [name, setName] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [id, setUserId] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const storedUserId = sessionStorage.getItem('userId');\n    if (storedUserId) {\n      setUserId(storedUserId);\n    } else {\n      setError('Kullanıcı giriş yapmamış!');\n      return;\n    }\n  }, []);\n\n  useEffect(() => {\n    if (id) {\n      const fetchUserData = async () => {\n        try {\n          const response = await axios.get(`${API_BASE_URL}/api/users/${id}`);\n          const data = response.data;\n          setName(data.name);\n          setPhoneNumber(data.phoneNumber);\n          setEmail(data.email);\n          setPassword(data.password);\n        } catch (error) {\n          console.error(\"Kullanıcı verileri alınırken bir hata oluştu:\", error);\n          setError('Kullanıcı verileri yüklenemedi.');\n        }\n      };\n      fetchUserData();\n    }\n  }, [id]);\n\n  const handleUpdate = async (e) => {\n    e.preventDefault();\n    if (!name || !phoneNumber || !email) {\n      setError('Lütfen tüm alanları doldurun.');\n      return;\n    }\n    setError('');\n\n    try {\n      const response = await axios.put(`${API_BASE_URL}/api/users/${id}`, {\n        name,\n        phoneNumber,\n        password,\n        email,\n      });\n\n      if (response.status === 200) {\n        navigate('/userProfile');\n      }\n    } catch (error) {\n      console.error('Profil güncellenirken bir hata oluştu:', error);\n      setError('Profil güncellenirken bir hata oluştu.');\n    }\n  };\n\n  const handleBackToProfile = () => {\n    navigate('/userProfile');\n  };\n\n  const titleStyle = {\n    fontSize: '32px',\n    fontWeight: 'bold',\n    color: 'black',\n    textAlign: 'center',\n    marginBottom: '20px',\n    fontFamily: \"'Be Vietnam Pro', 'sans-serif'\",\n    padding: '20px',\n  };\n\n  return (\n    <div className=\"edit-user-profile\">\n      <h2 style={titleStyle}>Profil Düzenle</h2>\n      <button\n        onClick={handleBackToProfile}\n        className=\"back-button\"\n        style={{\n          background: 'none',\n          border: 'none',\n          fontSize: '24px',\n          cursor: 'pointer',\n          display: 'block',\n          marginBottom: '10px',\n          color: 'black',\n          fontWeight: 'bold',\n        }}\n      >\n        &#8592; {/* Left Arrow Symbol */}\n      </button>\n      <UserProfileForm\n        name={name}\n        phoneNumber={phoneNumber}\n        email={email}\n        setName={setName}\n        setPhoneNumber={setPhoneNumber}\n        setEmail={setEmail}\n        error={error}\n        onSubmit={handleUpdate}\n      />\n    </div>\n  );\n};\n\nexport default EditUserProfile;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { useNavigate } from 'react-router-dom';\nimport './UserReservations.css';\nimport './Home.css';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nconst UserReservations = () => {\n  const [pastReservations, setPastReservations] = useState([]);\n  const [pendingReservations, setPendingReservations] = useState([]);\n  const [upcomingReservations, setUpcomingReservations] = useState([]);\n  const [error, setError] = useState('');\n  const [comment, setComment] = useState('');\n  const [rating, setRating] = useState(5);\n  const [selectedReservationId, setSelectedReservationId] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchUserIdAndReservations = async () => {\n      const storedUserId = sessionStorage.getItem('userId');\n      if (storedUserId) {\n        setUserId(Number(storedUserId));\n        try {\n          const response = await axios.get(\n            `${API_BASE_URL}/api/reservations/user/${storedUserId}`\n          );\n          const reservations = response.data;\n          const now = moment();\n  \n          const past = [];\n          const pending = [];\n          const upcoming = [];\n  \n          reservations.forEach((reservation) => {\n            const reservationTime = moment(reservation.reservationStartTime);\n  \n            if (reservation.status === 'APPROVED') {\n              if (reservationTime.isBefore(now)) {\n                past.push(reservation);  // Approved and past date\n              } else {\n                upcoming.push(reservation);  // Approved but upcoming\n              }\n            } else if (reservation.status === 'PENDING') {\n              if (reservationTime.isBefore(now)) {\n                // Skip the reservation if it's past but still pending\n                return;\n              } else {\n                pending.push(reservation);  // Pending and upcoming\n              }\n            } else {\n              if (reservationTime.isBefore(now)) {\n                // Skip the reservation if it's past\n                return;\n              }\n              upcoming.push(reservation);  // If no status, treat as upcoming\n            }\n          });\n  \n          setPastReservations(past);\n          setPendingReservations(pending);\n          setUpcomingReservations(upcoming);\n        } catch (error) {\n          console.error('Error fetching reservations:', error);\n          setError('Rezervasyonlar yüklenemedi.');\n        }\n      }\n    };\n  \n    fetchUserIdAndReservations();\n  }, []);\n  \n\n  const handleCancel = async (reservationId, type, reservationStartTime) => {\n    const now = moment();\n    const reservationTime = moment(reservationStartTime);\n\n    if (reservationTime.diff(now, 'hours') < 24) {\n      alert('Rezervasyon saatine 24 saatten az kaldığı için iptal edilemez.');\n      return;\n    }\n\n    try {\n      await axios.delete(`${API_BASE_URL}/api/reservations/${reservationId}`);\n      if (type === 'pending') {\n        setPendingReservations((prev) =>\n          prev.filter((res) => res.id !== reservationId)\n        );\n      } else if (type === 'upcoming') {\n        setUpcomingReservations((prev) =>\n          prev.filter((res) => res.id !== reservationId)\n        );\n      }\n    } catch (error) {\n      console.error('Error cancelling reservation:', error);\n      alert('Rezervasyon iptal edilemedi.');\n    }\n  };\n\n  const handleAddComment = async () => {\n    if (!comment.trim()) {\n      alert('Lütfen bir yorum girin.');\n      return;\n    }\n\n    try {\n      if (userId) {\n        const newComment = {\n          userId,\n          restaurantId: pastReservations.find(\n            (r) => r.id === selectedReservationId\n          )?.restaurant?.id,\n          comment,\n          rating,\n        };\n\n        await axios.post(`${API_BASE_URL}/api/comments`, newComment);\n\n        setPastReservations((prevReservations) =>\n          prevReservations.map((reservation) =>\n            reservation.id === selectedReservationId\n              ? { ...reservation, comment: comment, rating: rating }\n              : reservation\n          )\n        );\n\n        setComment('');\n        setRating(5);\n        setSelectedReservationId(null);\n        alert('Yorum başarıyla eklendi.');\n      }\n    } catch (error) {\n      console.error('Error adding comment:', error);\n      alert('Yorum eklenemedi.');\n    }\n  };\n\n  const renderReservations = (reservations, type) =>\n    reservations.map((res) => (\n      <li key={res.id}>\n        <div className=\"reservation-details\">\n          {res.restaurant.name} -{' '}\n          {moment(res.reservationStartTime).format('YYYY-MM-DD HH:mm')}\n        </div>\n        {(type === 'pending' || type === 'upcoming') && (\n          <button\n            onClick={() =>\n              handleCancel(res.id, type, res.reservationStartTime)\n            }\n          >\n            İptal Et\n          </button>\n        )}\n        {type === 'past' && (\n          <button onClick={() => setSelectedReservationId(res.id)}>\n            Yorum Ekle\n          </button>\n        )}\n      </li>\n    ));\n\n  const renderCommentModal = () => {\n    if (!selectedReservationId) return null;\n\n    return (\n      <div className=\"comment-modal\">\n        <div className=\"comment-modal-content\">\n          <h3>Yorum Ekle</h3>\n          <textarea\n            value={comment}\n            onChange={(e) => setComment(e.target.value)}\n            placeholder=\"Yorumunuzu buraya yazın\"\n            rows=\"4\"\n          />\n          <div className=\"rating-container\">\n            <label>Rating: </label>\n            <div className=\"star-rating\">\n              {[1, 2, 3, 4, 5].map((star) => (\n                <React.Fragment key={star}>\n                  <input\n                    type=\"radio\"\n                    id={`star${star}`}\n                    name=\"rating\"\n                    value={star}\n                    checked={rating === star}\n                    onChange={() => setRating(star)}\n                  />\n                  <label htmlFor={`star${star}`}>&#9733;</label>\n                </React.Fragment>\n              ))}\n            </div>\n          </div>\n          <div className=\"comment-modal-actions\">\n            <button onClick={handleAddComment}>Gönder</button>\n            <button onClick={() => setSelectedReservationId(null)}>\n              İptal\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"page-container\">\n      {/* Navbar */}\n      <div className=\"navbar\">\n        <div className=\"navbar-content\">\n        </div>\n      </div>\n\n      <div style={{ display: 'flex' }}>\n        {/* Sidebar */}\n        <div className=\"sidebar\">\n          <div className=\"sidebar-menu\">\n            <button className=\"sidebar-item\" onClick={() => navigate('/userProfile')}>\n              Profil\n            </button>\n            <button className=\"sidebar-item sidebar-item-active\">\n              Rezervasyonlarım\n            </button>\n            <button className=\"sidebar-item\" onClick={() => navigate('/favorites')}>\n              Favorilerim\n            </button>\n            <button\n              className=\"sidebar-item\"\n              onClick={() => navigate('/user-change-password')}\n            >\n              Şifre Değiştir\n            </button>\n          </div>\n        </div>\n\n        {/* Main Content */}\n        <div style={{ flex: 1, padding: '20px' }}>\n          <h2>Rezervasyonlarım</h2>\n          {error && <p className=\"error-message\">{error}</p>}\n\n          <div className=\"reservations-container\">\n            <div className=\"reservations-column\">\n              <h3>Geçmiş Rezervasyonlar</h3>\n              <ul>{renderReservations(pastReservations, 'past')}</ul>\n            </div>\n\n            <div className=\"reservations-column\">\n              <h3>Onay Bekleyen Rezervasyonlar</h3>\n              <ul>{renderReservations(pendingReservations, 'pending')}</ul>\n            </div>\n\n            <div className=\"reservations-column\">\n              <h3>Yaklaşan Rezervasyonlar</h3>\n              <ul>{renderReservations(upcomingReservations, 'upcoming')}</ul>\n            </div>\n          </div>\n\n          {renderCommentModal()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserReservations;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './UserProfile.css'; \nimport './Home.css';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nconst OwnerProfile = () => {\n  const [ownerData, setOwnerData] = useState({});\n  const [comments, setComments] = useState([]);\n  const [visibleComments, setVisibleComments] = useState(5); // State to manage visible comments\n  const id = sessionStorage.getItem('ownerId');\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!id) {\n      console.error('Restoran sayfasına giriş yapılmamış!');\n      return;\n    }\n\n    const fetchOwnerData = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/api/restaurants/${id}`);\n        setOwnerData(response.data);\n      } catch (error) {\n        console.error(\"Profil verileri alınırken hata oluştu:\", error);\n      }\n    };\n\n    const fetchComments = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/api/comments/restaurant/${id}`);\n        setComments(response.data);\n      } catch (error) {\n        console.error(\"Yorumlar yüklenirken hata oluştu:\", error);\n      }\n    };\n\n    fetchOwnerData();\n    fetchComments();\n  }, [id]);\n\n  const handleShowMoreComments = () => {\n    setVisibleComments((prev) => prev + 5);\n  };\n\n  const handleEditProfile = () => navigate('/edit-ownerProfile');\n  const handleReservationsRedirect = () => navigate('/owner-reservations');\n  const handlePasswordChange = () => navigate('/owner-change-password');\n  const handleDishesRedirect = () => navigate('/popular-dishes');\n\n  const handleDeleteAccount = async () => {\n    if (window.confirm('Hesabınızı silmek istediğinizden emin misiniz?')) {\n      try {\n        await axios.delete(`${API_BASE_URL}/api/restaurants/${id}`);\n        sessionStorage.removeItem('ownerId');\n        navigate('/');\n      } catch (error) {\n        console.error('Hesap silinirken hata oluştu:', error);\n      }\n    }\n  };\n\n  const tableCounts = ownerData.tables?.reduce(\n    (counts, table) => {\n      counts[table.capacity] = (counts[table.capacity] || 0) + 1;\n      return counts;\n    },\n    { 2: 0, 4: 0, 6: 0 }\n  );\n\n  const specialDays = [\n    ownerData.birthdayParty && 'Doğum Günü',\n    ownerData.anniversary && 'Yıldönümü',\n    ownerData.jobMeeting && 'İş Yemeği',\n    ownerData.proposal && 'Evlilik Teklifi',\n  ].filter(Boolean);\n\n  return (\n    <div className=\"page-container\">\n      <div className=\"header\">\n        <div className=\"header-content\"></div>\n      </div>\n\n      <div style={{ display: 'flex' }}>\n        {/* Sidebar */}\n        <div className=\"sidebar\">\n          <div className=\"sidebar-menu\">\n            <button className=\"sidebar-item sidebar-item-active\">Restoran Profil</button>\n            <button className=\"sidebar-item\" onClick={handleReservationsRedirect}>\n              Rezervasyonlar\n            </button>\n            <button className=\"sidebar-item\" onClick={handleDishesRedirect}>\n              Popüler Yemekler\n            </button>\n            <button className=\"sidebar-item\" onClick={handlePasswordChange}>\n              Şifre Değiştir\n            </button>\n          </div>\n        </div>\n\n        {/* Main Content */}\n        <div style={{ flex: 1 }}>\n          <div className=\"owner-profile\">\n            <div className=\"profile-section\">\n            <div className=\"profile-info\">\n                {ownerData.logo ? (\n                  <img \n                    src={ownerData.logoPhotoPath} \n                    alt=\"Restoran Logo\" \n                    className=\"profile-image\" \n                  />\n                ) : (\n                  <img \n                    src={ownerData.logoPhotoPath}\n                    alt=\"Default Profile\" \n                    className=\"profile-image\" \n                  />\n                )}\n                <div className=\"profile-details\">\n                  <h1 className=\"profile-name\">{ownerData.name}</h1>\n                  <p className=\"profile-email\">{ownerData.email}</p>\n                </div>\n              </div>\n              <div className=\"profile-actions\">\n                <button className=\"edit-profile-btn\" onClick={handleEditProfile}>\n                  Profili Düzenle\n                </button>\n                <button className=\"logout-btn\" onClick={handleDeleteAccount}>\n                  Hesabı Sil\n                </button>\n              </div>\n            </div>\n\n            <div className=\"comments-section\">\n              <h2 className=\"comments-header\">Restoran Detayları</h2>\n              <div className=\"comment-item\">\n                <div className=\"comment-details\">\n                  <div className=\"comment-text\">\n                    <p><strong>Adres:</strong> {ownerData.address}</p>\n                    <p><strong>Telefon Numarası:</strong> {ownerData.phoneNumber}</p>\n                    <p><strong>Çalışma Saatleri:</strong> {ownerData.operatingHours}</p>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"comment-item\">\n                <div className=\"comment-details\">\n                  <div className=\"comment-text\">\n                    <p><strong>2 Kişilik Masa Sayısı:</strong> {tableCounts?.[2]}</p>\n                    <p><strong>4 Kişilik Masa Sayısı:</strong> {tableCounts?.[4]}</p>\n                    <p><strong>6 Kişilik Masa Sayısı:</strong> {tableCounts?.[6]}</p>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"comment-item\">\n                <div className=\"comment-details\">\n                  <div className=\"comment-text\">\n                    <p><strong>Şartlar:</strong> {ownerData.additionalCondition || 'Şartlar belirtilmemiş'}</p>\n                    <p><strong>Özel Günler:</strong> {specialDays.length > 0 ? specialDays.join(', ') : 'Özel günler belirtilmemiş'}</p>\n                    <p><strong>Etiketler:</strong> {ownerData.tags?.join(', ') || 'Etiket belirtilmemiş'}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"comments-section\">\n              <h2 className=\"comments-header\">Yorumlar</h2>\n              {comments.length > 0 ? (\n                comments.slice(0, visibleComments).map((comment) => (\n                  <div key={comment.id} className=\"comment-item\">\n                    <div className=\"comment-details\">\n                      <div className=\"comment-text\">\n                        <p className=\"comment-restaurant\">\n                          {comment.user?.name || 'Bilinmeyen Kullanıcı'}\n                        </p>\n                        <p className=\"comment-comment\">{comment.comment}</p>\n                        <div className=\"comment-meta\">\n                          <span className=\"comment-date\">\n                            {new Date(comment.createdAt).toLocaleDateString()}\n                          </span>\n                          <span className=\"comment-rating\">\n                            Puan: {comment.rating} / 5\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ))\n              ) : (\n                <p>Yorum bulunmamaktadır.</p>\n              )}\n              {visibleComments < comments.length && (\n                <button className=\"show-more-btn\" onClick={handleShowMoreComments}>\n                  Daha Fazla Yükle\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OwnerProfile;\n","import React, { useState } from 'react';\nimport './LoginForm.css'\n\nconst ChangePasswordForm = ({ onSubmit }) => {\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const isPasswordValid = (password) => {\n    const hasUpperCase = /[A-Z]/.test(password);\n    const hasLowerCase = /[a-z]/.test(password);\n    const hasNumber = /\\d/.test(password);\n    const isCorrectLength = password.length >= 8 && password.length <= 12;\n    return hasUpperCase && hasLowerCase && hasNumber && isCorrectLength;\n  };\n\n  const validateForm = () => {\n    if (!currentPassword || !newPassword || !confirmPassword) {\n      setError('Lütfen tüm alanları doldurun.');\n      return false;\n    }\n\n    if (newPassword !== confirmPassword) {\n      setError('Yeni şifre ve onay şifresi eşleşmiyor.');\n      return false;\n    }\n\n    if (!isPasswordValid(newPassword)) {\n      setError('Yeni şifre 8 ile 12 karakter arasında olmalıdır. Bir büyük harf, bir küçük harf ve bir rakam içermelidir.');\n      return false;\n    }\n\n    setError('');\n    return true;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validateForm()) {\n      onSubmit({ currentPassword, newPassword });\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"signup-form\">\n      {error && <p className=\"error-message\">{error}</p>}\n\n      <div className=\"input-group\">\n        <label htmlFor=\"currentPassword\">Mevcut Şifre</label>\n        <input\n          type=\"password\"\n          id=\"currentPassword\"\n          value={currentPassword}\n          onChange={(e) => setCurrentPassword(e.target.value)}\n        />\n      </div>\n\n      <div className=\"input-group\">\n        <label htmlFor=\"newPassword\">Yeni Şifre</label>\n        <input\n          type=\"password\"\n          id=\"newPassword\"\n          value={newPassword}\n          onChange={(e) => setNewPassword(e.target.value)}\n        />\n      </div>\n\n      <div className=\"input-group\">\n        <label htmlFor=\"confirmPassword\">Yeni Şifreyi Onayla</label>\n        <input\n          type=\"password\"\n          id=\"confirmPassword\"\n          value={confirmPassword}\n          onChange={(e) => setConfirmPassword(e.target.value)}\n        />\n      </div>\n\n      <button type=\"submit\">Şifreyi Değiştir</button>\n    </form>\n  );\n};\n\nexport default ChangePasswordForm;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport ChangePasswordForm from '../components/ChangePasswordForm';\nimport '../components/UserSignupForm.css';\nimport UserProfileNavbar from '../components/UserProfileNavbar';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nconst UserChangePassword = () => {\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  const handlePasswordChange = async (formData) => {\n    const { currentPassword, newPassword } = formData;\n    const userId = sessionStorage.getItem('userId'); \n\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/users/${userId}`);\n      const { password: storedPassword, name, email, phoneNumber } = response.data;\n\n      if (storedPassword !== currentPassword) {\n        setError('Mevcut şifre yanlış. Lütfen doğru şifreyi girin.');\n        return;\n      }\n\n      const updateResponse = await axios.put(`${API_BASE_URL}/api/users/${userId}`, {\n        name,\n        email,\n        phoneNumber,\n        password: newPassword,\n      });\n\n      if (updateResponse.status === 200) {\n        setMessage('Şifreniz başarıyla değiştirildi!');\n        setError('');\n      }\n    } catch (err) {\n      console.error('Password change failed:', err);\n      setError('Şifre değiştirirken bir hata oluştu. Lütfen tekrar deneyin.');\n      setMessage('');\n    }\n  };\n\n  const titleStyle = {\n    fontSize: '32px',\n    fontWeight: 'bold',\n    color: 'black',\n    textAlign: 'center',\n    marginBottom: '20px',\n    fontFamily: \"'Be Vietnam Pro', 'sans-serif'\",\n    padding: '20px',\n  };\n\n  const handleProfileRedirect = () => {\n    navigate('/userProfile');\n  };\n\n  const handleReservationsRedirect = () => {\n    navigate('/user-reservations');\n  };\n\n  const handleFavoritesRedirect = () => {\n    navigate('/favorites');\n  };\n  \n  return (\n    <div className=\"page-container\">\n      <UserProfileNavbar />\n\n      <div style={{ display: 'flex' }}>\n        <div className=\"sidebar\">\n        <div className=\"sidebar-menu\">\n        <button\n          className=\"sidebar-item\"\n          onClick={handleProfileRedirect}\n        >\n          Profil\n        </button>\n        <button\n          className=\"sidebar-item\"\n          onClick={handleReservationsRedirect}\n        >\n          Rezervasyonlarım\n        </button>\n        <button\n          className=\"sidebar-item\"\n          onClick={handleFavoritesRedirect}\n        >\n          Favorilerim\n        </button>\n        <button\n          className=\"sidebar-item sidebar-item-active\"\n          onClick={() => {}}\n        >\n          Şifre Değiştir\n        </button>\n      </div>\n\n        </div>\n        <div style={{ flex: 1 }}>\n          <div className=\"change-password-page\">\n            <h2 style={titleStyle}>Şifre Değiştir</h2>\n            {error && <p className=\"error-message\">{error}</p>}\n            {message && <p className=\"success-message\">{message}</p>}\n            <ChangePasswordForm onSubmit={handlePasswordChange} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserChangePassword;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport ChangePasswordForm from '../components/ChangePasswordForm';\nimport '../components/UserSignupForm.css';\nimport UserProfileNavbar from '../components/OwnerProfileNavbar';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nconst OwnerChangePassword = () => {\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  const handlePasswordChange = async (formData) => {\n    const { currentPassword, newPassword } = formData;\n    const ownerId = sessionStorage.getItem('ownerId'); \n\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/restaurants/${ownerId}`);\n      const ownerData = response.data;\n\n      if (ownerData.password !== currentPassword) {\n        setError('Mevcut şifre yanlış. Lütfen doğru şifreyi girin.');\n        return;\n      }\n\n      const updatedData = { ...ownerData, password: newPassword };\n\n      const updateResponse = await axios.put(`${API_BASE_URL}/api/restaurants/${ownerId}`, updatedData);\n\n      if (updateResponse.status === 200) {\n        setMessage('Şifreniz başarıyla değiştirildi!');\n        setError('');\n      }\n    } catch (err) {\n      console.error('Password change failed:', err);\n      setError('Şifre değiştirirken bir hata oluştu. Lütfen tekrar deneyin.');\n      setMessage('');\n    }\n  };\n\n  const titleStyle = {\n    fontSize: '32px',\n    fontWeight: 'bold',\n    color: 'black',\n    textAlign: 'center',\n    marginBottom: '20px',\n    fontFamily: \"'Be Vietnam Pro', 'sans-serif'\",\n    padding: '20px',\n  };\n\n  const handleProfileRedirect = () => {\n    navigate('/ownerProfile');\n  };\n\n  const handleDishesRedirect = () => {\n    navigate('/popular-dishes');\n  };\n\n  const handleReservationsRedirect = () => {\n    navigate('/owner-reservations');\n  };\n\n  return (\n    <div className=\"page-container\">\n      <UserProfileNavbar />\n\n      <div style={{ display: 'flex' }}>\n        <div className=\"sidebar\">\n          <div className=\"sidebar-menu\">\n            <button className=\"sidebar-item\" onClick={handleProfileRedirect}>\n              Restoran Profil\n            </button>\n            <button className=\"sidebar-item\" onClick={handleReservationsRedirect}>\n              Rezervasyonlar\n            </button>\n            <button className=\"sidebar-item\" onClick={handleDishesRedirect}>\n              Popüler Yemekler\n            </button>\n            <button className=\"sidebar-item sidebar-item-active\" onClick={() => {}}>\n              Şifre Değiştir\n            </button>\n          </div>\n        </div>\n        <div style={{ flex: 1 }}>\n          <div className=\"change-password-page\">\n            <h2 style={titleStyle}>Şifre Değiştir</h2>\n            {error && <p className=\"error-message\">{error}</p>}\n            {message && <p className=\"success-message\">{message}</p>}\n            <ChangePasswordForm onSubmit={handlePasswordChange} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OwnerChangePassword;\n","import React, { useState } from 'react';\nimport './EditUserProfileForm.css';\n\nconst EditOwnerProfileForm = ({ \n  name, address, phoneNumber, email, twoPersonTables, fourPersonTables, sixPersonTables, operatingHours,\n  websiteLink, acceptConditions, additionalCondition, specialDays, tags, photos, logo, setName, setAddress, \n  setPhoneNumber, setEmail, setTwoPersonTables, setFourPersonTables, setSixPersonTables, setOperatingHours, \n  setWebsiteLink, setAcceptConditions, setAdditionalCondition, setSpecialDays, setTags, setPhotos, setLogo, onSubmit \n}) => {\n  const [formError, setFormError] = useState('');\n  const availableSpecialDays = ['Doğum Günü', 'İş Yemeği', 'Yıldönümü', 'Evlilik Teklifi'];\n\n  // Validation functions remain the same\n  const isPhoneNumberValid = (phone) => {\n    const phoneRegex = /^[0-9]{5,15}$/;\n    return phoneRegex.test(phone);\n  };\n\n  const isEmailValid = (email) => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n\n  const isHoursValid = (operatingHours) => {\n    const hoursRegex = /^\\s*\\d{1,2}\\.\\d{2}\\s*-\\s*\\d{1,2}\\.\\d{2}\\s*$/;\n    return hoursRegex.test(operatingHours);\n  };\n\n  const isUrlValid = (websiteLink) => {\n    const urlRegex = /^(https?:\\/\\/)?([\\da-z.-]+)\\.([a-z.]{2,6})([/\\w .-]*)*\\/?$/;\n    return urlRegex.test(websiteLink);\n  };\n\n  const handleSpecialDayChange = (e) => {\n    const selectedDay = e.target.value;\n    if (e.target.checked) {\n      setSpecialDays([...specialDays, selectedDay]);\n    } else {\n      setSpecialDays(specialDays.filter((day) => day !== selectedDay));\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!name || !phoneNumber || !email || !address || !operatingHours \n        || !acceptConditions == null) {\n      setFormError('Lütfen tüm alanları doldurun.');\n      return;\n    }\n\n    // All other validation checks remain the same\n    if (name.length > 50) {\n      setFormError('Restoran adı 50 karakterden uzun olamaz.');\n      return;\n    }\n\n    if (!isPhoneNumberValid(phoneNumber)) {\n      setFormError('Geçerli bir telefon numarası girin.');\n      return;\n    }\n\n    if (!isEmailValid(email)) {\n      setFormError('Geçerli bir e-posta adresi girin.');\n      return;\n    }\n\n    if (!isHoursValid(operatingHours)) {\n      setFormError('Geçerli bir çalışma saatleri formatı girin (ör. 09.00 - 22.00).');\n      return;\n    }\n\n    if (parseInt(twoPersonTables) < 0 || parseInt(fourPersonTables) < 0 || parseInt(sixPersonTables) < 0) {\n      setFormError('Masa sayısı sıfırdan küçük olamaz.');\n      return;\n    }\n\n    if (!isUrlValid(websiteLink)) {\n      setFormError('Geçerli bir website linki girin.');\n      return;\n    }\n\n    setFormError('');\n    onSubmit(e);\n  };\n\n  return (\n    <div className=\"form-container\">\n      <div className=\"login-form\">\n        <form onSubmit={handleSubmit} className=\"user-form\">\n          {formError && <p className=\"error-message\">{formError}</p>}\n\n          {/* Basic Information Section */}\n          <div className=\"form-section\">\n            <h3>Temel Bilgiler</h3>\n            <div className=\"input-group\">\n              <label htmlFor=\"name\">Restoran Adı</label>\n              <input\n                type=\"text\"\n                id=\"name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </div>\n\n            <div className=\"input-group\">\n              <label htmlFor=\"email\">E-posta</label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </div>\n\n            <div className=\"input-group\">\n              <label htmlFor=\"phoneNumber\">Telefon Numarası</label>\n              <input\n                type=\"tel\"\n                id=\"phoneNumber\"\n                value={phoneNumber}\n                onChange={(e) => setPhoneNumber(e.target.value)}\n              />\n            </div>\n\n            <div className=\"input-group\">\n              <label htmlFor=\"address\">Adres</label>\n              <input\n                type=\"text\"\n                id=\"address\"\n                value={address}\n                onChange={(e) => setAddress(e.target.value)}\n              />\n            </div>\n          </div>\n\n          {/* Restaurant Details Section */}\n          <div className=\"form-section\">\n            <h3>Restoran Detayları</h3>\n            <div className=\"input-group\">\n              <label htmlFor=\"operatingHours\">Çalışma Saatleri (ör. 09.00 - 22.00)</label>\n              <input\n                type=\"text\"\n                id=\"operatingHours\"\n                value={operatingHours}\n                onChange={(e) => setOperatingHours(e.target.value)}\n              />\n            </div>\n\n            <div className=\"input-group\">\n              <label htmlFor=\"websiteLink\">Web Sitesi</label>\n              <input\n                type=\"url\"\n                id=\"websiteLink\"\n                value={websiteLink}\n                onChange={(e) => setWebsiteLink(e.target.value)}\n              />\n            </div>\n          </div>\n\n          {/* Table Configuration Section */}\n          <div className=\"form-section\">\n            <h3>Masa Düzeni</h3>\n            <div className=\"table-grid\">\n              <div className=\"input-group\">\n                <label htmlFor=\"twoPersonTables\">2 Kişilik</label>\n                <input\n                  type=\"number\"\n                  id=\"twoPersonTables\"\n                  value={twoPersonTables}\n                  min={0}\n                  onChange={(e) => setTwoPersonTables(e.target.value === '' ? '' : Number(e.target.value))}\n                />\n              </div>\n\n              <div className=\"input-group\">\n                <label htmlFor=\"fourPersonTables\">4 Kişilik</label>\n                <input\n                  type=\"number\"\n                  id=\"fourPersonTables\"\n                  value={fourPersonTables}\n                  min={0}\n                  onChange={(e) => setFourPersonTables(e.target.value === '' ? '' : Number(e.target.value))}\n                />\n              </div>\n\n              <div className=\"input-group\">\n                <label htmlFor=\"sixPersonTables\">6 Kişilik</label>\n                <input\n                  type=\"number\"\n                  id=\"sixPersonTables\"\n                  value={sixPersonTables}\n                  min={0}\n                  onChange={(e) => setSixPersonTables(e.target.value === '' ? '' : Number(e.target.value))}\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* Special Days and Conditions Section */}\n          <div className=\"form-section\">\n            <h3>Özel Günler ve Şartlar</h3>\n            <div className=\"special-days-grid\">\n              {availableSpecialDays.map((day) => (\n                <label key={day} className=\"checkbox-label\">\n                  <input\n                    type=\"checkbox\"\n                    value={day}\n                    checked={specialDays.includes(day)}\n                    onChange={handleSpecialDayChange}\n                  />\n                  {day}\n                </label>\n              ))}\n            </div>\n\n            <div className=\"conditions-section\">\n              <div className=\"radio-group\">\n                <label>Özel Şartlar:</label>\n                <label className=\"radio-label\">\n                  <input\n                    type=\"radio\"\n                    name=\"acceptConditions\"\n                    value=\"yes\"\n                    checked={acceptConditions === 'yes'}\n                    onChange={() => setAcceptConditions('yes')}\n                  />\n                  Var\n                </label>\n                <label className=\"radio-label\">\n                  <input\n                    type=\"radio\"\n                    name=\"acceptConditions\"\n                    value=\"no\"\n                    checked={acceptConditions === 'no'}\n                    onChange={() => setAcceptConditions('no')}\n                  />\n                  Yok\n                </label>\n              </div>\n\n              {acceptConditions === 'yes' && (\n                <div className=\"input-group\">\n                  <input\n                    type=\"text\"\n                    value={additionalCondition}\n                    onChange={(e) => setAdditionalCondition(e.target.value)}\n                    placeholder=\"Özel şartlarınızı belirtin\"\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n\n          <button type=\"submit\" className=\"submit-button\">Profili Güncelle</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default EditOwnerProfileForm;\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport EditOwnerProfileForm from '../components/EditOwnerProfileForm';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nconst EditOwnerProfile = () => {\n  const [ownerData, setOwnerData] = useState({\n    name: '',\n    address: '',\n    phoneNumber: '',\n    email: '',\n    tables: [],\n    operatingHours: '',\n    websiteLink: '',\n    acceptConditions: null,\n    additionalCondition: '',\n    birthdayParty: false,\n    anniversary: false,\n    jobMeeting: false,\n    proposal: false,\n    tags: [],\n    photos: [],\n    logo: null,\n  });\n  const [error, setError] = useState('');\n  const [id, setOwnerId] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const storedOwnerId = sessionStorage.getItem('ownerId');\n    if (storedOwnerId) {\n      setOwnerId(storedOwnerId);\n    } else {\n      setError('Restoran sayfasına giriş yapılmamış!');\n      return;\n    }\n  }, []);\n\n  useEffect(() => {\n    if (id) {\n      const fetchOwnerData = async () => {\n        try {\n          const response = await axios.get(`${API_BASE_URL}/api/restaurants/${id}`);\n          setOwnerData({\n            ...response.data,\n            acceptConditions: response.data.additionalCondition ? 'yes' : 'no',\n          });\n        } catch (error) {\n          console.error('Profil verileri alınırken hata oluştu:', error);\n          setError('Profil verileri yüklenemedi');\n        }\n      };\n      fetchOwnerData();\n    }\n  }, [id]);\n\n  const handleUpdate = async (e) => {\n    e.preventDefault();\n    if (!ownerData.name || !ownerData.phoneNumber || !ownerData.email) {\n      setError('Lütfen tüm zorunlu alanları doldurun.');\n      return;\n    }\n    setError('');\n\n    try {\n      const response = await axios.put(`${API_BASE_URL}/api/restaurants/${id}`, ownerData);\n      if (response.status === 200) {\n        navigate('/ownerProfile');\n      }\n    } catch (error) {\n      console.error('Profil güncelleme sırasında bir hata oluştu:', error);\n      setError('Profil güncellenirken bir hata oluştu.');\n    }\n  };\n\n  const handleBackToProfile = () => {\n    navigate('/ownerProfile');\n  };\n\n  const titleStyle = {\n    fontSize: '32px',\n    fontWeight: 'bold',\n    color: 'black',\n    textAlign: 'center',\n    marginBottom: '20px',\n    fontFamily: \"'Be Vietnam Pro', 'sans-serif'\",\n    padding: '20px',\n  };\n\n  return (\n    <div className=\"edit-owner-profile\">\n      <h2 style={titleStyle}>Restoran Profili Düzenle</h2>\n      <button\n        onClick={handleBackToProfile}\n        className=\"back-button\"\n        style={{\n          background: 'none',\n          border: 'none',\n          fontSize: '24px',\n          cursor: 'pointer',\n          display: 'block',\n          marginBottom: '10px',\n          color: 'black',\n          fontWeight: 'bold',\n        }}\n      >\n        &#8592;\n      </button>\n      <EditOwnerProfileForm\n        name={ownerData.name}\n        address={ownerData.address}\n        phoneNumber={ownerData.phoneNumber}\n        email={ownerData.email}\n        twoPersonTables={ownerData.tables.filter((table) => table.capacity === 2).length}\n        fourPersonTables={ownerData.tables.filter((table) => table.capacity === 4).length}\n        sixPersonTables={ownerData.tables.filter((table) => table.capacity === 6).length}\n        operatingHours={ownerData.operatingHours}\n        websiteLink={ownerData.websiteLink}\n        acceptConditions={ownerData.acceptConditions}\n        additionalCondition={ownerData.additionalCondition}\n        specialDays={[\n          ownerData.birthdayParty && 'Doğum Günü',\n          ownerData.anniversary && 'Yıldönümü',\n          ownerData.jobMeeting && 'İş Yemeği',\n          ownerData.proposal && 'Evlilik Teklifi',\n        ].filter(Boolean)}\n        tags={ownerData.tags.join(', ')}\n        photos={ownerData.photos}\n        logo={ownerData.logo}\n        setName={(value) => setOwnerData({ ...ownerData, name: value })}\n        setAddress={(value) => setOwnerData({ ...ownerData, address: value })}\n        setPhoneNumber={(value) => setOwnerData({ ...ownerData, phoneNumber: value })}\n        setEmail={(value) => setOwnerData({ ...ownerData, email: value })}\n        setTwoPersonTables={(value) => {\n          const newTables = Array.from({ length: value }, (_, i) => ({\n            available: true,\n            capacity: 2,\n            name: `Table 2-${i + 1}`,\n          }));\n          setOwnerData((prevData) => ({\n            ...prevData,\n            tables: [...prevData.tables.filter((table) => table.capacity !== 2), ...newTables],\n          }));\n        }}\n        setFourPersonTables={(value) => {\n          const newTables = Array.from({ length: value }, (_, i) => ({\n            available: true,\n            capacity: 4,\n            name: `Table 4-${i + 1}`,\n          }));\n          setOwnerData((prevData) => ({\n            ...prevData,\n            tables: [...prevData.tables.filter((table) => table.capacity !== 4), ...newTables],\n          }));\n        }}\n        setSixPersonTables={(value) => {\n          const newTables = Array.from({ length: value }, (_, i) => ({\n            available: true,\n            capacity: 6,\n            name: `Table 6-${i + 1}`,\n          }));\n          setOwnerData((prevData) => ({\n            ...prevData,\n            tables: [...prevData.tables.filter((table) => table.capacity !== 6), ...newTables],\n          }));\n        }}\n        setOperatingHours={(value) => setOwnerData({ ...ownerData, operatingHours: value })}\n        setWebsiteLink={(value) => setOwnerData({ ...ownerData, websiteLink: value })}\n        setAcceptConditions={(value) => setOwnerData({ ...ownerData, acceptConditions: value })}\n        setAdditionalCondition={(value) => setOwnerData({ ...ownerData, additionalCondition: value })}\n        setSpecialDays={(value) => {\n          setOwnerData({\n            ...ownerData,\n            birthdayParty: value.includes('Doğum Günü'),\n            anniversary: value.includes('Yıldönümü'),\n            jobMeeting: value.includes('İş Yemeği'),\n            proposal: value.includes('Evlilik Teklifi'),\n          });\n        }}\n        setTags={(value) => setOwnerData({ ...ownerData, tags: value.split(', ') })}\n        setPhotos={(files) => setOwnerData({ ...ownerData, photos: Array.from(files).map((file) => URL.createObjectURL(file)) })}\n        setLogo={(file) => setOwnerData({ ...ownerData, logo: URL.createObjectURL(file) })}\n        error={error}\n        onSubmit={handleUpdate}\n      />\n    </div>\n  );\n};\n\nexport default EditOwnerProfile;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport \"./UserReservations.css\";\nimport './Home.css';  // Added to ensure sidebar styles are imported\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nconst formatDateTime = (dateTime) => {\n  const date = new Date(dateTime);\n  return `${date.toLocaleDateString('tr-TR', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  })} ${date.toLocaleTimeString('tr-TR', {\n    hour: '2-digit',\n    minute: '2-digit',\n  })}`;\n};\n\nconst OwnerReservations = () => {\n  const [reservations, setReservations] = useState([]);\n  const [error, setError] = useState(null);\n  const restaurantId = sessionStorage.getItem('ownerId');\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!restaurantId) {\n      setError('Restoran giriş yapılmamış!');\n      return;\n    }\n  \n    const fetchReservations = async () => {\n      try {\n        const response = await axios.get(\n          `${API_BASE_URL}/api/reservations/restaurant/${restaurantId}`\n        );\n        setReservations(response.data);\n      } catch (error) {\n        console.error('Rezervasyonlar alınırken hata oluştu:', error);\n        setError('Rezervasyonlar yüklenemedi');\n      }\n    };\n  \n    fetchReservations();\n  }, [restaurantId]);\n  \n  const handlePasswordChange = () => navigate('/owner-change-password');\n  const handleDishesRedirect = () => navigate('/popular-dishes');\n  const handleProfileRedirect = () => navigate('/ownerProfile');\n\n  const pastReservations = reservations.filter(reservation => new Date(reservation.reservationStartTime) < new Date());\n  const pendingReservations = reservations.filter(reservation => reservation.status === 'PENDING');\n  const upcomingReservations = reservations.filter(reservation => reservation.status === 'APPROVED' && new Date(reservation.reservationStartTime) >= new Date());\n\n  const handleReservationAction = async (reservationId, action) => {\n    try {\n        if (action === 'approve') {\n            await axios.patch(`${API_BASE_URL}/api/reservations/${reservationId}/status`, {\n                status: 'APPROVED'\n            });\n            alert('Rezervasyon onaylandı. Kullanıcıya bildirim gönderildi.');\n        } else if (action === 'reject') {\n            await axios.delete(`${API_BASE_URL}/api/reservations/${reservationId}`);\n            alert('Rezervasyon reddedildi. Kullanıcıya bildirim gönderildi.');\n        }\n\n        setReservations((prev) =>\n            prev.filter((res) => res.id !== reservationId)\n        );\n    } catch (error) {\n        console.error(`Rezervasyon ${action} işleminde hata oluştu:`, error);\n        setError('Rezervasyon işleminde hata oluştu');\n    }\n};\n\n  \n\n  return (\n    <div className=\"page-container\">\n      <div className=\"header\">\n        <div className=\"header-content\">\n        </div>\n      </div>\n\n      <div style={{ display: 'flex' }}>\n        {/* Sidebar */}\n        <div className=\"sidebar\">\n          <div className=\"sidebar-menu\">\n            <button className=\"sidebar-item\" onClick={handleProfileRedirect}>\n              Restoran Profil\n            </button>\n            <button className=\"sidebar-item sidebar-item-active\">\n              Rezervasyonlar\n            </button>\n            <button className=\"sidebar-item\" onClick={handleDishesRedirect}>\n              Popüler Yemekler\n            </button>\n            <button className=\"sidebar-item\" onClick={handlePasswordChange}>\n              Şifre Değiştir\n            </button>\n          </div>\n        </div>\n\n        {/* Main Content */}\n        <div style={{ flex: 1 }}>\n          <div className=\"owner-reservations\">\n            <h1>Restoran Rezervasyonları</h1>\n            {error && <p className=\"error-message\">{error}</p>}\n\n            <div className=\"reservations-container\">\n              {/* Past Reservations */}\n              <section className=\"reservations-column\">\n                <h3>Geçmiş Rezervasyonlar</h3>\n                {pastReservations.length > 0 ? (\n                  <ul>\n                    {pastReservations.map((reservation) => (\n                      <li key={reservation.id}>\n                        <div>\n                          <p><strong>Kullanıcı Adı:</strong> {reservation.user.name}</p>\n                          <p><strong>Rezervasyon Zamanı:</strong> {formatDateTime(reservation.reservationStartTime)}</p>\n                          <p><strong>Masası:</strong> {reservation.table.name}</p>\n                        </div>\n                      </li>\n                    ))}\n                  </ul>\n                ) : (\n                  <p>Geçmiş rezervasyon bulunmamaktadır.</p>\n                )}\n              </section>\n\n              {/* Pending Reservations */}\n              <section className=\"reservations-column\">\n                <h3>Onay Bekleyen Rezervasyonlar</h3>\n                {pendingReservations.length > 0 ? (\n                  <ul>\n                    {pendingReservations.map((reservation) => (\n                      <li key={reservation.id}>\n                        <div>\n                          <p><strong>Kullanıcı Adı:</strong> {reservation.user.name}</p>\n                          <p><strong>Rezervasyon Zamanı:</strong> {formatDateTime(reservation.reservationStartTime)}</p>\n                          <p><strong>Masası:</strong> {reservation.table.name}</p>\n                        </div>\n                        <div>\n                          <button onClick={() => handleReservationAction(reservation.id, 'approve')}>Onayla</button>\n                          <button onClick={() => handleReservationAction(reservation.id, 'reject')}>Reddet</button>\n                        </div>\n                      </li>\n                    ))}\n                  </ul>\n                ) : (\n                  <p>Onay bekleyen rezervasyon bulunmamaktadır.</p>\n                )}\n              </section>\n\n              {/* Upcoming Reservations */}\n              <section className=\"reservations-column\">\n                <h3>Yaklaşan Rezervasyonlar</h3>\n                {upcomingReservations.length > 0 ? (\n                  <ul>\n                    {upcomingReservations.map((reservation) => (\n                      <li key={reservation.id}>\n                        <div>\n                          <p><strong>Kullanıcı Adı:</strong> {reservation.user.name}</p>\n                          <p><strong>Rezervasyon Zamanı:</strong> {new Date(reservation.reservationStartTime).toLocaleString()}</p>\n                          <p><strong>Masası:</strong> {reservation.table.name}</p>\n                        </div>\n                      </li>\n                    ))}\n                  </ul>\n                ) : (\n                  <p>Yaklaşan rezervasyon bulunmamaktadır.</p>\n                )}\n              </section>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OwnerReservations;","import React, { useState } from 'react';\n\nconst ResetPasswordForm = ({ onSubmit }) => {\n  const [token, setToken] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const validateForm = () => {\n    if (!token) {\n      setError('Lütfen şifre sıfırlama tokenını girin.');\n      return false;\n    }\n    if (!newPassword || newPassword.length < 6 || newPassword.length > 12) {\n      setError('Şifre 6 ile 12 karakter arasında olmalıdır.');\n      return false;\n    }\n    setError('');\n    return true;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validateForm()) {\n      onSubmit({ token, newPassword });\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {error && <p className=\"error-message\">{error}</p>}\n      <div className=\"input-group\">\n        <label htmlFor=\"token\">Şifre Sıfırlama Tokenı</label>\n        <input\n          type=\"text\"\n          id=\"token\"\n          value={token}\n          onChange={(e) => setToken(e.target.value)}\n          placeholder=\"Tokenınızı girin\"\n        />\n      </div>\n      <div className=\"input-group\">\n        <label htmlFor=\"newPassword\">Yeni Şifre</label>\n        <input\n          type=\"password\"\n          id=\"newPassword\"\n          value={newPassword}\n          onChange={(e) => setNewPassword(e.target.value)}\n          placeholder=\"Yeni şifrenizi girin\"\n        />\n      </div>\n      <button type=\"submit\">Şifreyi Sıfırla</button>\n    </form>\n  );\n};\n\nexport default ResetPasswordForm;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport ResetPasswordForm from '../components/ResetPasswordForm';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nconst ResetPassword = () => {\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handlePasswordReset = async (data) => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/reset`, data);\n      if (response.status === 200) {\n        setMessage('Şifre başarıyla sıfırlandı!');\n        navigate('/login');\n        setError('');\n      }\n    } catch (err) {\n      console.error('Password reset failed:', err);\n      setError('Şifre sıfırlama sırasında bir hata oluştu. Lütfen tekrar deneyin.');\n      setMessage('');\n    }\n  };\n\n  return (\n    <div className=\"forgot-password-token-page\">\n      <h2>Şifreyi Sıfırla</h2>\n      {error && <p className=\"error-message\">{error}</p>}\n      {message && <p className=\"success-message\">{message}</p>}\n      <ResetPasswordForm onSubmit={handlePasswordReset} />\n    </div>\n  );\n};\n\nexport default ResetPassword;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport './Home.css';\nimport './UserReservations.css';\nimport './PopularDishes.css';  // New CSS file for modal styling\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\n// Modal Component\nconst Modal = ({ isOpen, onClose, children }) => {\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-content\">\n        <button \n          className=\"modal-close-btn\"\n          onClick={onClose}\n        >\n          &times;\n        </button>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nconst PopularDishes = () => {\n  const [menuItems, setMenuItems] = useState([]);\n  const [error, setError] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const restaurantId = sessionStorage.getItem(\"ownerId\");\n  const navigate = useNavigate();\n\n  const [newDish, setNewDish] = useState({\n    name: \"\",\n    description: \"\",\n    price: \"\",\n    tags: \"\",\n  });\n\n  useEffect(() => {\n    if (!restaurantId) {\n      setError(\"Restoran ID eksik!\");\n      return;\n    }\n\n    const fetchMenuItems = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/api/restaurants/${restaurantId}/menu-items`);\n        setMenuItems(response.data);\n      } catch (error) {\n        console.error(\"Popüler yemekler alınırken hata oluştu:\", error);\n        setError(\"Popüler yemekler yüklenemedi\");\n      }\n    };\n\n    fetchMenuItems();\n  }, [restaurantId]);\n\n  const handleDelete = async (dishId) => {\n    const confirmDelete = window.confirm(\n      \"Bu yemeği silmek istediğinize emin misiniz? İşlem geri alınamaz!\"\n    );\n  \n    if (!confirmDelete) return;\n  \n    try {\n      await axios.delete(`${API_BASE_URL}/api/restaurants/menu-items/${dishId}`);\n      setMenuItems(menuItems.filter((item) => item.id !== dishId));\n    } catch (error) {\n      console.error(\"Yemek silinirken hata oluştu:\", error);\n      setError(\"Yemek silinemedi.\");\n    }\n  };\n  \n\n  const handleAddDish = async (e) => {\n    e.preventDefault();\n    const { name, description, price, tags } = newDish;\n\n    if (!name || !description || !price) {\n      setError(\"Lütfen tüm alanları doldurun.\");\n      return;\n    }\n\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/restaurants/${restaurantId}/menu-items`,\n        {\n          name,\n          description,\n          price: parseFloat(price),\n          tags: tags ? tags.split(\",\").map((tag) => tag.trim()) : [], \n        }\n      );\n\n      setMenuItems([...menuItems, response.data]);\n      setNewDish({ name: \"\", description: \"\", price: \"\", tags: \"\" });\n      setError(null);\n      setIsModalOpen(false);\n    } catch (error) {\n      console.error(\"Yeni yemek eklenirken hata oluştu:\", error);\n      setError(\"Yeni yemek eklenemedi.\");\n    }\n  };\n\n  // Navigation handlers\n  const handleProfileRedirect = () => navigate('/ownerProfile');\n  const handleReservationsRedirect = () => navigate('/owner-reservations');\n  const handlePasswordChange = () => navigate('/owner-change-password');\n\n  return (\n    <div className=\"page-container\">\n      <div className=\"header\">\n        <div className=\"header-content\">\n        </div>\n      </div>\n\n      <div style={{ display: 'flex' }}>\n        {/* Sidebar */}\n        <div className=\"sidebar\">\n          <div className=\"sidebar-menu\">\n            <button className=\"sidebar-item\" onClick={handleProfileRedirect}>\n              Restoran Profil\n            </button>\n            <button className=\"sidebar-item\" onClick={handleReservationsRedirect}>\n              Rezervasyonlar\n            </button>\n            <button className=\"sidebar-item sidebar-item-active\">\n              Popüler Yemekler\n            </button>\n            <button className=\"sidebar-item\" onClick={handlePasswordChange}>\n              Şifre Değiştir\n            </button>\n          </div>\n        </div>\n\n        {/* Main Content */}\n        <div style={{ flex: 1, padding: '20px' }}>\n          <div className=\"popular-dishes\">\n            <h1>Popüler Yemekler</h1>\n            \n            {/* Add Dish Button */}\n            <button \n              className=\"add-dish-btn\"\n              onClick={() => setIsModalOpen(true)}\n            >\n              Yemek Ekle\n            </button>\n\n            {/* Modal for Adding Dish */}\n            <Modal \n              isOpen={isModalOpen} \n              onClose={() => {\n                setIsModalOpen(false);\n                setError(null);\n              }}\n            >\n              <form onSubmit={handleAddDish} className=\"login-form modal-form\">\n                <h2>Yeni Yemek Ekle</h2>\n                \n                {error && <p className=\"error-message\">{error}</p>}\n                \n                <div className=\"input-group\">\n                  <label>Yemek Adı</label>\n                  <input\n                    type=\"text\"\n                    value={newDish.name}\n                    onChange={(e) => setNewDish({ ...newDish, name: e.target.value })}\n                    required\n                  />\n                </div>\n\n                <div className=\"input-group\">\n                  <label>Açıklama</label>\n                  <input\n                    type=\"text\"\n                    value={newDish.description}\n                    onChange={(e) => setNewDish({ ...newDish, description: e.target.value })}\n                    required\n                  />\n                </div>\n\n                <div className=\"input-group\">\n                  <label>Fiyat (₺)</label>\n                  <input\n                    type=\"number\"\n                    value={newDish.price}\n                    onChange={(e) => setNewDish({ ...newDish, price: e.target.value })}\n                    required\n                  />\n                </div>\n\n                <div className=\"input-group\">\n                  <label>Etiketler (virgülle ayırın)</label>\n                  <input\n                    type=\"text\"\n                    value={newDish.tags}\n                    onChange={(e) => setNewDish({ ...newDish, tags: e.target.value })}\n                  />\n                </div>\n\n                <button type=\"submit\">Yemek Ekle</button>\n              </form>\n            </Modal>\n\n            {/* Menu Items List */}\n            <div className=\"menu-items-section\">\n              <h2>Mevcut Yemekler</h2>\n              {menuItems.length > 0 ? (\n                <ul>\n                  {menuItems.map((item) => (\n                    <li key={item.id}>\n                      <div>\n                        <h3>{item.name}</h3>\n                        <p><strong>Açıklama:</strong> {item.description}</p>\n                        <p><strong>Fiyat:</strong> {item.price} ₺</p>\n                        <p><strong>Etiketler:</strong> {item.tags?.join(\", \") || \"Yok\"}</p>\n                      </div>\n                      <button onClick={() => handleDelete(item.id)}>Sil</button>\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                <p>Yemekler bulunmamaktadır.</p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PopularDishes;","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nconst Favorites = () => {\n  const [favorites, setFavorites] = useState([]);\n  const [successMessage, setSuccessMessage] = useState(''); \n\n  const userId = sessionStorage.getItem('userId');\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!userId) {\n      console.error('Lütfen giriş yapınız.');\n      return;\n    }\n\n    const fetchFavorites = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/api/favorites/${userId}`);\n        setFavorites(response.data);\n      } catch (err) {\n        console.error(err.response ? err.response.data.message : 'Favoriler alınamadı.');\n      }\n    };\n\n    fetchFavorites();\n  }, [userId]);\n\n  const handleReservationsRedirect = () => {\n    navigate('/user-reservations');\n  };\n\n  const handlePasswordChangeRedirect = () => {\n    navigate('/user-change-password');\n  };\n\n  const handleRemoveFavorite = async (restaurantId) => {\n    try {\n      await axios.delete(`${API_BASE_URL}/api/favorites/${userId}/${restaurantId}`);\n      setFavorites(favorites.filter((favorite) => favorite.restaurant.id !== restaurantId)); \n      setSuccessMessage('Favorilerden Kaldırıldı');  \n      setTimeout(() => setSuccessMessage(''), 3000);  \n    } catch (err) {\n      console.error(err.response ? err.response.data.message : 'Favori kaldırılamadı.');\n    }\n  };\n\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <div className=\"sidebar\">\n        <div className=\"sidebar-menu\">\n          <button className=\"sidebar-item\" onClick={() => navigate('/userProfile')}>\n              Profil\n            </button>\n          <button className=\"sidebar-item\" onClick={handleReservationsRedirect}>\n            Rezervasyonlarım\n          </button>\n          <button className=\"sidebar-item sidebar-item-active\">\n            Favorilerim\n          </button>\n          <button className=\"sidebar-item\" onClick={handlePasswordChangeRedirect}>\n            Şifre Değiştir\n          </button>\n        </div>\n      </div>\n\n      <div style={{ flex: 1 }}>\n        <h1>Favori Restoranlar</h1>\n        \n        {successMessage && <div className=\"success-message\">{successMessage}</div>}\n\n        <ul>\n          {favorites.map((restaurant) => (\n            <li key={restaurant.restaurant.id} className=\"favorite-item\">\n              <div>\n                <h3\n                style={{ color: 'black', cursor: 'pointer' }}\n                onClick={() => navigate(`/restaurants/${restaurant.restaurant.id}`)}>\n                {restaurant.restaurantName}</h3>\n              </div>\n              <button onClick={() => handleRemoveFavorite(restaurant.restaurant.id)}>\n                Favorilerden Kaldır\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Favorites;\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Navbar from './components/HomeNavbar';\nimport Navbar2 from './components/ListNavbar';\nimport Navbar3 from './components/LoginNavbar';\nimport Navbar4 from './components/RestaurantNavbar';\nimport Navbar5 from './components/OwnerSignupNavbar';\nimport Navbar6 from './components/UserSignupNavbar';\nimport Navbar7 from './components/UserProfileNavbar';\nimport Navbar8 from './components/OwnerProfileNavbar';\nimport Home from './pages/Home';\nimport Restaurants from './pages/List';\nimport Restaurant from './pages/Restaurant';\nimport Login from './pages/Login';\nimport ForgotPassword from './pages/ForgotPassword';\nimport OwnerSignup from './pages/OwnerSignup';\nimport UserSignup from './pages/UserSignup';\nimport UserProfile from './pages/UserProfile';\nimport EditUserProfile from './pages/EditUserProfile';\nimport UserReservations from './pages/UserReservations';\nimport OwnerProfile from './pages/OwnerProfile';\nimport UserChangePassword from './pages/UserChangePassword';\nimport OwnerChangePassword from './pages/OwnerChangePassword';\nimport EditOwnerProfile from './pages/EditOwnerProfile';\nimport OwnerReservations from './pages/OwnerReservations';\nimport ResetPassword from './pages/ResetPassword';\nimport PopularDishes from './pages/PopularDishes';\nimport Favorites from './pages/Favorites';\nconst App = () => {\n  const [isDarkMode, setIsDarkMode] = useState(false);\n\n  useEffect(() => {\n    const storedDarkMode = sessionStorage.getItem('darkMode');\n    if (storedDarkMode === 'true') {\n      setIsDarkMode(true);\n      document.body.classList.add('dark-mode');\n    }\n  }, []);\n\n  const toggleDarkMode = () => {\n    const newDarkMode = !isDarkMode;\n    setIsDarkMode(newDarkMode);\n    document.body.classList.toggle('dark-mode');\n    sessionStorage.setItem('darkMode', newDarkMode);\n  };\n\n  const withDarkMode = (NavbarComponent) => {\n    return (props) => (\n      <NavbarComponent\n        {...props}\n        isDarkMode={isDarkMode}\n        toggleDarkMode={toggleDarkMode}\n      />\n    );\n  };\n\n  const WrappedNavbar = withDarkMode(Navbar);\n  const WrappedNavbar2 = withDarkMode(Navbar2);\n  const WrappedNavbar3 = withDarkMode(Navbar3);\n  const WrappedNavbar4 = withDarkMode(Navbar4);\n  const WrappedNavbar5 = withDarkMode(Navbar5);\n  const WrappedNavbar6 = withDarkMode(Navbar6);\n  const WrappedNavbar7 = withDarkMode(Navbar7);\n  const WrappedNavbar8 = withDarkMode(Navbar8);\n\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<><WrappedNavbar /><Home /></>} />\n        <Route path=\"/home\" element={<><WrappedNavbar /><Home /></>} />\n        <Route path=\"/restaurants\" element={<><WrappedNavbar2 /><Restaurants /></>} />\n        <Route path=\"/restaurants/:id\" element={<><WrappedNavbar4 /><Restaurant /></>} />\n        <Route path=\"/login\" element={<><WrappedNavbar3 /><Login /></>} />\n        <Route path=\"/forgot-password\" element={<ForgotPassword />} />\n        <Route path=\"/signup/owner\" element={<><WrappedNavbar5 /><OwnerSignup /></>} />\n        <Route path=\"/signup/user\" element={<><WrappedNavbar6 /><UserSignup /></>} />\n        <Route path=\"/userProfile\" element={<><WrappedNavbar7 /><UserProfile/></>} />\n        <Route path=\"/edit-userProfile\" element={<EditUserProfile />} />\n        <Route path=\"/user-reservations\" element={<><WrappedNavbar7 /><UserReservations /> </>} />\n        <Route path=\"/ownerProfile\" element={<><WrappedNavbar8 /><OwnerProfile/></> } />\n        <Route path=\"/edit-ownerProfile\" element={<EditOwnerProfile /> } />\n        <Route path=\"/user-change-password\" element={<UserChangePassword />} />\n        <Route path=\"/owner-change-password\" element={<OwnerChangePassword />} />\n        <Route path=\"/owner-reservations\" element={<><WrappedNavbar8 /><OwnerReservations /> </>} />\n        <Route path=\"/reset-password\" element={<ResetPassword />} />\n        <Route path=\"/popular-dishes\" element={<><WrappedNavbar8 /><PopularDishes /></>} />\n        <Route path=\"/favorites\" element={<><WrappedNavbar7 /><Favorites /> </>} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n\n"],"sourceRoot":""}